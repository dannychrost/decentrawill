{
	"id": "7ee3f10a70181d15433191aa6e54bfc4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/DecentraWill.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract DecentraWill {\r\n    address public owner;\r\n    // Events\r\n    event AllocationSet(\r\n        address indexed user,\r\n        address indexed token,\r\n        address indexed recipient,\r\n        uint256 amount\r\n    );\r\n    event RecipientRemoved(\r\n        address indexed user,\r\n        address indexed token,\r\n        address indexed recipient\r\n    );\r\n    event Withdrawal(\r\n        address indexed creator,\r\n        address indexed token,\r\n        address indexed beneficiary,\r\n        uint256 amount\r\n    );\r\n\r\n    // Errors\r\n    error Unauthorized(); // No additional data needed\r\n    error RecipientNotFound(); // When a specific recipient cannot be found\r\n    error NoAllocationAvailable(); // When there is no allocation available for a withdrawal\r\n    error TransferFailed(); // If the ERC20 token transfer fails\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            revert Unauthorized();\r\n        }\r\n        _;\r\n    }\r\n\r\n    // Nested mapping remains to store the actual allocations.\r\n    // tokenAllocations[userAddress][tokenAddress][recipientAddress] = amount\r\n    mapping(address => mapping(address => mapping(address => uint256)))\r\n        public tokenAllocations;\r\n\r\n    // Arrays to keep track of which tokens each user has allocated and to whom.\r\n    // Creator => Tokens\r\n    mapping(address => address[]) private userAllocatedTokens;\r\n    // Creator => Token => Recipients\r\n    mapping(address => mapping(address => address[])) private tokenRecipients;\r\n\r\n    // Mapping to keep track of the creators that have allocated tokens to a beneficiary.\r\n    // Beneficiary => Creators\r\n    mapping(address => address[]) public creatorsForBeneficiary;\r\n\r\n    // Helper function to add a token to the user's allocated list if it's not already there.\r\n    function _addTokenForUser(address user, address token) private {\r\n        if (!isTokenAllocatedByUser(user, token)) {\r\n            userAllocatedTokens[user].push(token);\r\n        }\r\n    }\r\n\r\n    // Helper function to add a recipient for a token if it's not already there.\r\n    function _addRecipientForToken(\r\n        address user,\r\n        address token,\r\n        address recipient\r\n    ) private {\r\n        if (!isRecipientOfToken(user, token, recipient)) {\r\n            tokenRecipients[user][token].push(recipient);\r\n        }\r\n    }\r\n\r\n    // Check if a token is already allocated by a user.\r\n    function isTokenAllocatedByUser(\r\n        address user,\r\n        address token\r\n    ) public view returns (bool) {\r\n        for (uint i = 0; i < userAllocatedTokens[user].length; i++) {\r\n            if (userAllocatedTokens[user][i] == token) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Check if an address is already a recipient of a specific token by a user.\r\n    function isRecipientOfToken(\r\n        address user,\r\n        address token,\r\n        address recipient\r\n    ) public view returns (bool) {\r\n        for (uint i = 0; i < tokenRecipients[user][token].length; i++) {\r\n            if (tokenRecipients[user][token][i] == recipient) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Helper function to add a creator for a beneficiary if not already there\r\n    function _addCreatorForBeneficiary(\r\n        address creator,\r\n        address beneficiary\r\n    ) private {\r\n        bool creatorExists = false;\r\n        for (uint i = 0; i < creatorsForBeneficiary[beneficiary].length; i++) {\r\n            if (creatorsForBeneficiary[beneficiary][i] == creator) {\r\n                creatorExists = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!creatorExists) {\r\n            creatorsForBeneficiary[beneficiary].push(creator);\r\n        }\r\n    }\r\n\r\n    // Public function to set allocations, with added logic to track tokens and recipients.\r\n    function setAllocation(\r\n        address token,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public {\r\n        if (amount == 0) {\r\n            // Attempt to remove the recipient if the allocation amount is zero.\r\n            // This call will also handle removing the user from creators list if no other allocations exist.\r\n            removeRecipientForToken(msg.sender, token, recipient);\r\n        } else {\r\n            // Set or update the allocation amount\r\n            tokenAllocations[msg.sender][token][recipient] = amount;\r\n            // Add token to user's allocated tokens list if not already there\r\n            _addTokenForUser(msg.sender, token);\r\n            // Add recipient to the token's recipient list if not already there\r\n            _addRecipientForToken(msg.sender, token, recipient);\r\n            // Add creator for beneficiary mapping if not already there\r\n            _addCreatorForBeneficiary(msg.sender, recipient);\r\n            emit AllocationSet(msg.sender, token, recipient, amount); // Emit event when allocation is set\r\n        }\r\n    }\r\n\r\n    // Function to get a list of tokens allocated by a user.\r\n    function getAllocatedTokensByUser(\r\n        address user\r\n    ) public view returns (address[] memory) {\r\n        return userAllocatedTokens[user];\r\n    }\r\n\r\n    // Function to get a list of recipients for a specific token allocated by a user.\r\n    function getRecipientsByToken(\r\n        address user,\r\n        address token\r\n    ) public view returns (address[] memory) {\r\n        return tokenRecipients[user][token];\r\n    }\r\n\r\n    // Function to remove a specific recipient for a token from a user's allocation\r\n    function removeRecipientForToken(\r\n        address user,\r\n        address token,\r\n        address recipient\r\n    ) public {\r\n        if (!isRecipientOfToken(user, token, recipient)) {\r\n            revert RecipientNotFound();\r\n        }\r\n\r\n        // Find and remove the recipient from the recipients list\r\n        uint256 index;\r\n        for (index = 0; index < tokenRecipients[user][token].length; index++) {\r\n            if (tokenRecipients[user][token][index] == recipient) {\r\n                break;\r\n            }\r\n        }\r\n        for (\r\n            uint256 i = index;\r\n            i < tokenRecipients[user][token].length - 1;\r\n            i++\r\n        ) {\r\n            tokenRecipients[user][token][i] = tokenRecipients[user][token][\r\n                i + 1\r\n            ];\r\n        }\r\n        tokenRecipients[user][token].pop();\r\n\r\n        // Remove the token allocation for the recipient\r\n        delete tokenAllocations[user][token][recipient];\r\n\r\n        // Check if there are no more recipients for this token\r\n        if (tokenRecipients[user][token].length == 0) {\r\n            // Find and remove the token from userAllocatedTokens if no recipients are left\r\n            for (index = 0; index < userAllocatedTokens[user].length; index++) {\r\n                if (userAllocatedTokens[user][index] == token) {\r\n                    for (\r\n                        uint256 i = index;\r\n                        i < userAllocatedTokens[user].length - 1;\r\n                        i++\r\n                    ) {\r\n                        userAllocatedTokens[user][i] = userAllocatedTokens[\r\n                            user\r\n                        ][i + 1];\r\n                    }\r\n                    userAllocatedTokens[user].pop();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // Check if the user has any other tokens allocated to the recipient\r\n        bool hasOtherAllocations = false;\r\n        address[] memory allocatedTokens = userAllocatedTokens[user];\r\n        for (uint i = 0; i < allocatedTokens.length; i++) {\r\n            if (tokenAllocations[user][allocatedTokens[i]][recipient] > 0) {\r\n                hasOtherAllocations = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // If no other allocations exist, remove the user from the recipient's creators list\r\n        if (!hasOtherAllocations) {\r\n            address[] storage creatorsList = creatorsForBeneficiary[recipient];\r\n            for (uint i = 0; i < creatorsList.length; i++) {\r\n                if (creatorsList[i] == user) {\r\n                    for (uint j = i; j < creatorsList.length - 1; j++) {\r\n                        creatorsList[j] = creatorsList[j + 1];\r\n                    }\r\n                    creatorsList.pop();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        emit RecipientRemoved(user, token, recipient); // Emit event when a recipient is removed\r\n    }\r\n\r\n    function withdrawTokenForBeneficiary(\r\n        address creator,\r\n        address token,\r\n        uint256 requestedAmount\r\n    ) public {\r\n        if (!isRecipientOfToken(creator, token, msg.sender)) {\r\n            revert RecipientNotFound();\r\n        }\r\n\r\n        uint256 allocation = tokenAllocations[creator][token][msg.sender];\r\n        if (allocation == 0) {\r\n            revert NoAllocationAvailable();\r\n        }\r\n\r\n        uint256 withdrawalAmount = (requestedAmount > allocation)\r\n            ? allocation\r\n            : requestedAmount;\r\n\r\n        // Decrease the allocation before transferring to prevent re-entrancy attacks\r\n        tokenAllocations[creator][token][msg.sender] -= withdrawalAmount;\r\n\r\n        // Transfer the tokens from the will creator's account to the beneficiary\r\n        bool success = IERC20(token).transferFrom(\r\n            creator,\r\n            msg.sender,\r\n            withdrawalAmount\r\n        );\r\n        if (!success) {\r\n            revert TransferFailed();\r\n        }\r\n\r\n        emit Withdrawal(creator, token, msg.sender, withdrawalAmount);\r\n\r\n        // Cleanup if all tokens are withdrawn\r\n        if (tokenAllocations[creator][token][msg.sender] == 0) {\r\n            removeRecipientForToken(creator, token, msg.sender);\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DecentraWill.sol": {
				"DecentraWill": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NoAllocationAvailable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RecipientNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AllocationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "RecipientRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "creatorsForBeneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getAllocatedTokensByUser",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getRecipientsByToken",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "isRecipientOfToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isTokenAllocatedByUser",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "removeRecipientForToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setAllocation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenAllocations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawTokenForBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DecentraWill.sol\":119:9945  contract DecentraWill {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DecentraWill.sol\":953:1004  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/DecentraWill.sol\":978:983  owner */\n  0x00\n    /* \"contracts/DecentraWill.sol\":978:996  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/DecentraWill.sol\":986:996  msg.sender */\n  caller\n    /* \"contracts/DecentraWill.sol\":978:996  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/DecentraWill.sol\":119:9945  contract DecentraWill {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DecentraWill.sol\":119:9945  contract DecentraWill {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f15b1d9\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x5f15b1d9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa2bdd08c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xbd042d2e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc3698da4\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x0ac0be3f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0db36379\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e6cc31f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17a436ed\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3112fcc6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DecentraWill.sol\":5445:5622  function getRecipientsByToken(... */\n    tag_3:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DecentraWill.sol\":5196:5350  function getAllocatedTokensByUser(... */\n    tag_4:\n      tag_14\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n        /* \"contracts/DecentraWill.sol\":2576:2905  function isTokenAllocatedByUser(... */\n    tag_5:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1476:1490   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1469:1491   */\n      iszero\n        /* \"#utility.yul\":1451:1492   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1439:1441   */\n      0x20\n        /* \"#utility.yul\":1424:1442   */\n      add\n        /* \"contracts/DecentraWill.sol\":2576:2905  function isTokenAllocatedByUser(... */\n      tag_18\n        /* \"#utility.yul\":1311:1498   */\n      jump\n        /* \"contracts/DecentraWill.sol\":1287:1387  mapping(address => mapping(address => mapping(address => uint256)))... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      0x01\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      dup3\n      mstore\n      swap3\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n      swap1\n      mstore\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1988:2013   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1976:1978   */\n      0x20\n        /* \"#utility.yul\":1961:1979   */\n      add\n        /* \"contracts/DecentraWill.sol\":1287:1387  mapping(address => mapping(address => mapping(address => uint256)))... */\n      tag_18\n        /* \"#utility.yul\":1842:2019   */\n      jump\n        /* \"contracts/DecentraWill.sol\":1812:1871  mapping(address => address[]) public creatorsForBeneficiary */\n    tag_7:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2447:2479   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2429:2480   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2417:2419   */\n      0x20\n        /* \"#utility.yul\":2402:2420   */\n      add\n        /* \"contracts/DecentraWill.sol\":1812:1871  mapping(address => address[]) public creatorsForBeneficiary */\n      tag_18\n        /* \"#utility.yul\":2283:2486   */\n      jump\n        /* \"contracts/DecentraWill.sol\":4044:5126  function setAllocation(... */\n    tag_8:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/DecentraWill.sol\":148:168  address public owner */\n    tag_9:\n      sload(0x00)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/DecentraWill.sol\":5715:8651  function removeRecipientForToken(... */\n    tag_10:\n      tag_42\n      tag_50\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"contracts/DecentraWill.sol\":2995:3358  function isRecipientOfToken(... */\n    tag_11:\n      tag_25\n      tag_53\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"contracts/DecentraWill.sol\":8659:9942  function withdrawTokenForBeneficiary(... */\n    tag_12:\n      tag_42\n      tag_57\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"contracts/DecentraWill.sol\":5445:5622  function getRecipientsByToken(... */\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":5586:5607  tokenRecipients[user] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":5586:5601  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":5586:5607  tokenRecipients[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":5586:5614  tokenRecipients[user][token] */\n      swap4\n      dup6\n      and\n      dup4\n      mstore\n      swap3\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":5579:5614  return tokenRecipients[user][token] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts/DecentraWill.sol\":5550:5566  address[] memory */\n      0x60\n      swap4\n        /* \"contracts/DecentraWill.sol\":5579:5614  return tokenRecipients[user][token] */\n      swap3\n      dup4\n      add\n        /* \"contracts/DecentraWill.sol\":5586:5614  tokenRecipients[user][token] */\n      dup3\n        /* \"contracts/DecentraWill.sol\":5579:5614  return tokenRecipients[user][token] */\n      dup3\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_61:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_61\n      jumpi\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DecentraWill.sol\":5445:5622  function getRecipientsByToken(... */\n    tag_59:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":5196:5350  function getAllocatedTokensByUser(... */\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":5317:5342  userAllocatedTokens[user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":5317:5336  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":5317:5342  userAllocatedTokens[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":5310:5342  return userAllocatedTokens[user] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts/DecentraWill.sol\":5281:5297  address[] memory */\n      0x60\n      swap4\n        /* \"contracts/DecentraWill.sol\":5310:5342  return userAllocatedTokens[user] */\n      swap3\n      dup4\n      add\n        /* \"contracts/DecentraWill.sol\":5317:5342  userAllocatedTokens[user] */\n      dup3\n        /* \"contracts/DecentraWill.sol\":5310:5342  return userAllocatedTokens[user] */\n      dup3\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_64:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_64\n      jumpi\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DecentraWill.sol\":5196:5350  function getAllocatedTokensByUser(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":2576:2905  function isTokenAllocatedByUser(... */\n    tag_27:\n        /* \"contracts/DecentraWill.sol\":2683:2687  bool */\n      0x00\n      dup1\n        /* \"contracts/DecentraWill.sol\":2700:2875  for (uint i = 0; i < userAllocatedTokens[user].length; i++) {... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":2721:2746  userAllocatedTokens[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":2721:2740  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":2721:2746  userAllocatedTokens[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":2721:2753  userAllocatedTokens[user].length */\n      sload\n        /* \"contracts/DecentraWill.sol\":2717:2753  i < userAllocatedTokens[user].length */\n      dup2\n      lt\n        /* \"contracts/DecentraWill.sol\":2700:2875  for (uint i = 0; i < userAllocatedTokens[user].length; i++) {... */\n      iszero\n      tag_67\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":2779:2804  userAllocatedTokens[user] */\n      dup5\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":2779:2798  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":2779:2804  userAllocatedTokens[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":2779:2807  userAllocatedTokens[user][i] */\n      dup1\n      sload\n        /* \"contracts/DecentraWill.sol\":2779:2816  userAllocatedTokens[user][i] == token */\n      swap2\n      dup6\n      and\n      swap2\n        /* \"contracts/DecentraWill.sol\":2805:2806  i */\n      dup4\n      swap1\n        /* \"contracts/DecentraWill.sol\":2779:2807  userAllocatedTokens[user][i] */\n      dup2\n      lt\n      tag_70\n      jumpi\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DecentraWill.sol\":2779:2816  userAllocatedTokens[user][i] == token */\n      sub\n        /* \"contracts/DecentraWill.sol\":2775:2864  if (userAllocatedTokens[user][i] == token) {... */\n      tag_73\n      jumpi\n        /* \"contracts/DecentraWill.sol\":2844:2848  true */\n      0x01\n        /* \"contracts/DecentraWill.sol\":2837:2848  return true */\n      swap2\n      pop\n      pop\n      jump(tag_59)\n        /* \"contracts/DecentraWill.sol\":2775:2864  if (userAllocatedTokens[user][i] == token) {... */\n    tag_73:\n        /* \"contracts/DecentraWill.sol\":2755:2758  i++ */\n      0x01\n      add\n        /* \"contracts/DecentraWill.sol\":2700:2875  for (uint i = 0; i < userAllocatedTokens[user].length; i++) {... */\n      jump(tag_66)\n    tag_67:\n      pop\n        /* \"contracts/DecentraWill.sol\":2892:2897  false */\n      0x00\n      swap4\n        /* \"contracts/DecentraWill.sol\":2576:2905  function isTokenAllocatedByUser(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":1812:1871  mapping(address => address[]) public creatorsForBeneficiary */\n    tag_39:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n      dup3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":4044:5126  function setAllocation(... */\n    tag_45:\n        /* \"contracts/DecentraWill.sol\":4173:4179  amount */\n      dup1\n        /* \"contracts/DecentraWill.sol\":4183:4184  0 */\n      0x00\n        /* \"contracts/DecentraWill.sol\":4173:4184  amount == 0 */\n      sub\n        /* \"contracts/DecentraWill.sol\":4169:5119  if (amount == 0) {... */\n      tag_77\n      jumpi\n        /* \"contracts/DecentraWill.sol\":4394:4447  removeRecipientForToken(msg.sender, token, recipient) */\n      tag_78\n        /* \"contracts/DecentraWill.sol\":4418:4428  msg.sender */\n      caller\n        /* \"contracts/DecentraWill.sol\":4430:4435  token */\n      dup5\n        /* \"contracts/DecentraWill.sol\":4437:4446  recipient */\n      dup5\n        /* \"contracts/DecentraWill.sol\":4394:4417  removeRecipientForToken */\n      tag_51\n        /* \"contracts/DecentraWill.sol\":4394:4447  removeRecipientForToken(msg.sender, token, recipient) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/DecentraWill.sol\":4044:5126  function setAllocation(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":4169:5119  if (amount == 0) {... */\n    tag_77:\n        /* \"contracts/DecentraWill.sol\":4549:4559  msg.sender */\n      caller\n        /* \"contracts/DecentraWill.sol\":4532:4560  tokenAllocations[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":4532:4548  tokenAllocations */\n      0x01\n        /* \"contracts/DecentraWill.sol\":4532:4560  tokenAllocations[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":4532:4567  tokenAllocations[msg.sender][token] */\n      dup9\n      dup2\n      and\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/DecentraWill.sol\":4532:4578  tokenAllocations[msg.sender][token][recipient] */\n      swap1\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":4532:4587  tokenAllocations[msg.sender][token][recipient] = amount */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/DecentraWill.sol\":4681:4716  _addTokenForUser(msg.sender, token) */\n      tag_80\n      swap1\n        /* \"contracts/DecentraWill.sol\":4561:4566  token */\n      dup5\n        /* \"contracts/DecentraWill.sol\":4681:4697  _addTokenForUser */\n      tag_81\n        /* \"contracts/DecentraWill.sol\":4681:4716  _addTokenForUser(msg.sender, token) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/DecentraWill.sol\":4812:4863  _addRecipientForToken(msg.sender, token, recipient) */\n      tag_82\n        /* \"contracts/DecentraWill.sol\":4834:4844  msg.sender */\n      caller\n        /* \"contracts/DecentraWill.sol\":4846:4851  token */\n      dup5\n        /* \"contracts/DecentraWill.sol\":4853:4862  recipient */\n      dup5\n        /* \"contracts/DecentraWill.sol\":4812:4833  _addRecipientForToken */\n      tag_83\n        /* \"contracts/DecentraWill.sol\":4812:4863  _addRecipientForToken(msg.sender, token, recipient) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/DecentraWill.sol\":4951:4999  _addCreatorForBeneficiary(msg.sender, recipient) */\n      tag_84\n        /* \"contracts/DecentraWill.sol\":4977:4987  msg.sender */\n      caller\n        /* \"contracts/DecentraWill.sol\":4989:4998  recipient */\n      dup4\n        /* \"contracts/DecentraWill.sol\":4951:4976  _addCreatorForBeneficiary */\n      tag_85\n        /* \"contracts/DecentraWill.sol\":4951:4999  _addCreatorForBeneficiary(msg.sender, recipient) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/DecentraWill.sol\":5052:5061  recipient */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":5019:5070  AllocationSet(msg.sender, token, recipient, amount) */\n      and\n        /* \"contracts/DecentraWill.sol\":5045:5050  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":5019:5070  AllocationSet(msg.sender, token, recipient, amount) */\n      and\n        /* \"contracts/DecentraWill.sol\":5033:5043  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":5019:5070  AllocationSet(msg.sender, token, recipient, amount) */\n      and\n      0x7ae337d22e62927a7215ad9c9a3a275863a9d305944d515360e7a2449dd85cce\n        /* \"contracts/DecentraWill.sol\":5063:5069  amount */\n      dup5\n        /* \"contracts/DecentraWill.sol\":5019:5070  AllocationSet(msg.sender, token, recipient, amount) */\n      mload(0x40)\n      tag_86\n      swap2\n        /* \"#utility.yul\":1988:2013   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1976:1978   */\n      0x20\n        /* \"#utility.yul\":1961:1979   */\n      add\n      swap1\n        /* \"#utility.yul\":1842:2019   */\n      jump\n        /* \"contracts/DecentraWill.sol\":5019:5070  AllocationSet(msg.sender, token, recipient, amount) */\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DecentraWill.sol\":4044:5126  function setAllocation(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":5715:8651  function removeRecipientForToken(... */\n    tag_51:\n        /* \"contracts/DecentraWill.sol\":5853:5895  isRecipientOfToken(user, token, recipient) */\n      tag_88\n        /* \"contracts/DecentraWill.sol\":5872:5876  user */\n      dup4\n        /* \"contracts/DecentraWill.sol\":5878:5883  token */\n      dup4\n        /* \"contracts/DecentraWill.sol\":5885:5894  recipient */\n      dup4\n        /* \"contracts/DecentraWill.sol\":5853:5871  isRecipientOfToken */\n      tag_54\n        /* \"contracts/DecentraWill.sol\":5853:5895  isRecipientOfToken(user, token, recipient) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/DecentraWill.sol\":5848:5950  if (!isRecipientOfToken(user, token, recipient)) {... */\n      tag_89\n      jumpi\n        /* \"contracts/DecentraWill.sol\":5919:5938  RecipientNotFound() */\n      mload(0x40)\n      shl(0xe0, 0x66a21ffb)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DecentraWill.sol\":5848:5950  if (!isRecipientOfToken(user, token, recipient)) {... */\n    tag_89:\n        /* \"contracts/DecentraWill.sol\":6029:6042  uint256 index */\n      0x00\n        /* \"contracts/DecentraWill.sol\":6053:6243  for (index = 0; index < tokenRecipients[user][token].length; index++) {... */\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":6077:6098  tokenRecipients[user] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":6077:6092  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":6077:6098  tokenRecipients[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6077:6105  tokenRecipients[user][token] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6077:6112  tokenRecipients[user][token].length */\n      sload\n        /* \"contracts/DecentraWill.sol\":6069:6112  index < tokenRecipients[user][token].length */\n      dup2\n      lt\n        /* \"contracts/DecentraWill.sol\":6053:6243  for (index = 0; index < tokenRecipients[user][token].length; index++) {... */\n      iszero\n      tag_91\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":6142:6163  tokenRecipients[user] */\n      dup5\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":6142:6157  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":6142:6163  tokenRecipients[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6142:6170  tokenRecipients[user][token] */\n      dup8\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6142:6177  tokenRecipients[user][token][index] */\n      dup1\n      sload\n        /* \"contracts/DecentraWill.sol\":6142:6190  tokenRecipients[user][token][index] == recipient */\n      swap2\n      dup5\n      and\n      swap2\n        /* \"contracts/DecentraWill.sol\":6171:6176  index */\n      dup4\n      swap1\n        /* \"contracts/DecentraWill.sol\":6142:6177  tokenRecipients[user][token][index] */\n      dup2\n      lt\n      tag_94\n      jumpi\n      tag_94\n      tag_71\n      jump\t// in\n    tag_94:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DecentraWill.sol\":6138:6232  if (tokenRecipients[user][token][index] == recipient) {... */\n      eq\n        /* \"contracts/DecentraWill.sol\":6211:6216  break */\n      tag_91\n        /* \"contracts/DecentraWill.sol\":6138:6232  if (tokenRecipients[user][token][index] == recipient) {... */\n      jumpi\n        /* \"contracts/DecentraWill.sol\":6114:6121  index++ */\n      0x01\n      add\n        /* \"contracts/DecentraWill.sol\":6053:6243  for (index = 0; index < tokenRecipients[user][token].length; index++) {... */\n      jump(tag_90)\n    tag_91:\n        /* \"contracts/DecentraWill.sol\":6284:6289  index */\n      dup1\n        /* \"contracts/DecentraWill.sol\":6253:6505  for (... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":6308:6329  tokenRecipients[user] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":6308:6323  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":6308:6329  tokenRecipients[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6308:6336  tokenRecipients[user][token] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6308:6343  tokenRecipients[user][token].length */\n      sload\n        /* \"contracts/DecentraWill.sol\":6308:6347  tokenRecipients[user][token].length - 1 */\n      tag_100\n      swap1\n        /* \"contracts/DecentraWill.sol\":6346:6347  1 */\n      0x01\n      swap1\n        /* \"contracts/DecentraWill.sol\":6308:6347  tokenRecipients[user][token].length - 1 */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contracts/DecentraWill.sol\":6304:6305  i */\n      dup2\n        /* \"contracts/DecentraWill.sol\":6304:6347  i < tokenRecipients[user][token].length - 1 */\n      lt\n        /* \"contracts/DecentraWill.sol\":6253:6505  for (... */\n      iszero\n      tag_98\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":6426:6447  tokenRecipients[user] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":6426:6441  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":6426:6447  tokenRecipients[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6426:6454  tokenRecipients[user][token] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6473:6478  i + 1 */\n      tag_102\n        /* \"contracts/DecentraWill.sol\":6473:6474  i */\n      dup3\n        /* \"contracts/DecentraWill.sol\":6477:6478  1 */\n      0x01\n        /* \"contracts/DecentraWill.sol\":6473:6478  i + 1 */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"contracts/DecentraWill.sol\":6426:6493  tokenRecipients[user][token][... */\n      dup2\n      sload\n      dup2\n      lt\n      tag_105\n      jumpi\n      tag_105\n      tag_71\n      jump\t// in\n    tag_105:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":6392:6413  tokenRecipients[user] */\n      dup9\n      dup2\n      and\n      dup5\n      mstore\n        /* \"contracts/DecentraWill.sol\":6392:6407  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":6392:6413  tokenRecipients[user] */\n      dup4\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6392:6420  tokenRecipients[user][token] */\n      dup10\n      dup4\n      and\n      dup7\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6392:6423  tokenRecipients[user][token][i] */\n      dup1\n      sload\n        /* \"contracts/DecentraWill.sol\":6426:6493  tokenRecipients[user][token][... */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/DecentraWill.sol\":6392:6420  tokenRecipients[user][token] */\n      swap1\n        /* \"contracts/DecentraWill.sol\":6421:6422  i */\n      dup4\n      swap1\n        /* \"contracts/DecentraWill.sol\":6392:6423  tokenRecipients[user][token][i] */\n      dup2\n      lt\n      tag_108\n      jumpi\n      tag_108\n      tag_71\n      jump\t// in\n    tag_108:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/DecentraWill.sol\":6392:6493  tokenRecipients[user][token][i] = tokenRecipients[user][token][... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/DecentraWill.sol\":6362:6365  i++ */\n      add\n        /* \"contracts/DecentraWill.sol\":6253:6505  for (... */\n      jump(tag_97)\n    tag_98:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":6515:6536  tokenRecipients[user] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":6515:6530  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":6515:6536  tokenRecipients[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6515:6543  tokenRecipients[user][token] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6515:6549  tokenRecipients[user][token].pop() */\n      dup1\n      sload\n      dup1\n      tag_111\n      jumpi\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      dup4\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":6627:6649  tokenAllocations[user] */\n      dup7\n      dup2\n      and\n      dup1\n      dup5\n      mstore\n        /* \"contracts/DecentraWill.sol\":6515:6549  tokenRecipients[user][token].pop() */\n      0x01\n        /* \"contracts/DecentraWill.sol\":6627:6649  tokenAllocations[user] */\n      dup4\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6627:6656  tokenAllocations[user][token] */\n      dup9\n      dup5\n      and\n      dup1\n      dup8\n      mstore\n      swap1\n      dup6\n      mstore\n      dup2\n      dup7\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6627:6667  tokenAllocations[user][token][recipient] */\n      swap4\n      dup9\n      and\n      dup7\n      mstore\n      swap3\n      dup5\n      mstore\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6620:6667  delete tokenAllocations[user][token][recipient] */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/DecentraWill.sol\":6749:6770  tokenRecipients[user] */\n      swap1\n      dup5\n      mstore\n        /* \"contracts/DecentraWill.sol\":6749:6764  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":6749:6770  tokenRecipients[user] */\n      dup4\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6749:6777  tokenRecipients[user][token] */\n      swap2\n      dup5\n      mstore\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6749:6784  tokenRecipients[user][token].length */\n      sload\n        /* \"contracts/DecentraWill.sol\":6749:6789  tokenRecipients[user][token].length == 0 */\n      swap1\n      sub\n        /* \"contracts/DecentraWill.sol\":6745:7521  if (tokenRecipients[user][token].length == 0) {... */\n      tag_116\n      jumpi\n      pop\n        /* \"contracts/DecentraWill.sol\":6912:6913  0 */\n      0x00\n        /* \"contracts/DecentraWill.sol\":6899:7510  for (index = 0; index < userAllocatedTokens[user].length; index++) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":6923:6948  userAllocatedTokens[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":6923:6942  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":6923:6948  userAllocatedTokens[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6923:6955  userAllocatedTokens[user].length */\n      sload\n        /* \"contracts/DecentraWill.sol\":6915:6955  index < userAllocatedTokens[user].length */\n      dup2\n      lt\n        /* \"contracts/DecentraWill.sol\":6899:7510  for (index = 0; index < userAllocatedTokens[user].length; index++) {... */\n      iszero\n      tag_116\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":6989:7014  userAllocatedTokens[user] */\n      dup5\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":6989:7008  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":6989:7014  userAllocatedTokens[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":6989:7021  userAllocatedTokens[user][index] */\n      dup1\n      sload\n        /* \"contracts/DecentraWill.sol\":6989:7030  userAllocatedTokens[user][index] == token */\n      swap2\n      dup6\n      and\n      swap2\n        /* \"contracts/DecentraWill.sol\":7015:7020  index */\n      dup4\n      swap1\n        /* \"contracts/DecentraWill.sol\":6989:7021  userAllocatedTokens[user][index] */\n      dup2\n      lt\n      tag_119\n      jumpi\n      tag_119\n      tag_71\n      jump\t// in\n    tag_119:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DecentraWill.sol\":6989:7030  userAllocatedTokens[user][index] == token */\n      sub\n        /* \"contracts/DecentraWill.sol\":6985:7495  if (userAllocatedTokens[user][index] == token) {... */\n      tag_121\n      jumpi\n        /* \"contracts/DecentraWill.sol\":7098:7103  index */\n      dup1\n        /* \"contracts/DecentraWill.sol\":7055:7394  for (... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":7134:7159  userAllocatedTokens[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":7134:7153  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":7134:7159  userAllocatedTokens[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":7134:7166  userAllocatedTokens[user].length */\n      sload\n        /* \"contracts/DecentraWill.sol\":7134:7170  userAllocatedTokens[user].length - 1 */\n      tag_125\n      swap1\n        /* \"contracts/DecentraWill.sol\":7169:7170  1 */\n      0x01\n      swap1\n        /* \"contracts/DecentraWill.sol\":7134:7170  userAllocatedTokens[user].length - 1 */\n      tag_101\n      jump\t// in\n    tag_125:\n        /* \"contracts/DecentraWill.sol\":7130:7131  i */\n      dup2\n        /* \"contracts/DecentraWill.sol\":7130:7170  i < userAllocatedTokens[user].length - 1 */\n      lt\n        /* \"contracts/DecentraWill.sol\":7055:7394  for (... */\n      iszero\n      tag_123\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":7282:7363  userAllocatedTokens[... */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":7282:7301  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":7282:7363  userAllocatedTokens[... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":7364:7369  i + 1 */\n      tag_126\n        /* \"contracts/DecentraWill.sol\":7364:7365  i */\n      dup3\n        /* \"contracts/DecentraWill.sol\":7368:7369  1 */\n      0x01\n        /* \"contracts/DecentraWill.sol\":7364:7369  i + 1 */\n      tag_103\n      jump\t// in\n    tag_126:\n        /* \"contracts/DecentraWill.sol\":7282:7370  userAllocatedTokens[... */\n      dup2\n      sload\n      dup2\n      lt\n      tag_128\n      jumpi\n      tag_128\n      tag_71\n      jump\t// in\n    tag_128:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":7251:7276  userAllocatedTokens[user] */\n      dup9\n      dup2\n      and\n      dup5\n      mstore\n        /* \"contracts/DecentraWill.sol\":7251:7270  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":7251:7276  userAllocatedTokens[user] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/DecentraWill.sol\":7251:7279  userAllocatedTokens[user][i] */\n      dup1\n      sload\n        /* \"contracts/DecentraWill.sol\":7282:7370  userAllocatedTokens[... */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/DecentraWill.sol\":7251:7276  userAllocatedTokens[user] */\n      swap1\n        /* \"contracts/DecentraWill.sol\":7277:7278  i */\n      dup4\n      swap1\n        /* \"contracts/DecentraWill.sol\":7251:7279  userAllocatedTokens[user][i] */\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_131\n      tag_71\n      jump\t// in\n    tag_131:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/DecentraWill.sol\":7251:7370  userAllocatedTokens[user][i] = userAllocatedTokens[... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/DecentraWill.sol\":7197:7200  i++ */\n      add\n        /* \"contracts/DecentraWill.sol\":7055:7394  for (... */\n      jump(tag_122)\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":7416:7441  userAllocatedTokens[user] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":7416:7435  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":7416:7441  userAllocatedTokens[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":7416:7447  userAllocatedTokens[user].pop() */\n      dup1\n      sload\n      dup1\n      tag_134\n      jumpi\n      tag_134\n      tag_112\n      jump\t// in\n    tag_134:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"contracts/DecentraWill.sol\":7470:7475  break */\n      jump(tag_116)\n        /* \"contracts/DecentraWill.sol\":6985:7495  if (userAllocatedTokens[user][index] == token) {... */\n    tag_121:\n        /* \"contracts/DecentraWill.sol\":6957:6964  index++ */\n      0x01\n      add\n        /* \"contracts/DecentraWill.sol\":6899:7510  for (index = 0; index < userAllocatedTokens[user].length; index++) {... */\n      jump(tag_115)\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":7687:7712  userAllocatedTokens[user] */\n      dup5\n      and\n        /* \"contracts/DecentraWill.sol\":7609:7633  bool hasOtherAllocations */\n      0x00\n        /* \"contracts/DecentraWill.sol\":7687:7712  userAllocatedTokens[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":7687:7706  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":7687:7712  userAllocatedTokens[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":7652:7712  address[] memory allocatedTokens = userAllocatedTokens[user] */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"contracts/DecentraWill.sol\":7609:7633  bool hasOtherAllocations */\n      dup5\n      swap4\n        /* \"contracts/DecentraWill.sol\":7652:7712  address[] memory allocatedTokens = userAllocatedTokens[user] */\n      dup4\n      add\n        /* \"contracts/DecentraWill.sol\":7687:7712  userAllocatedTokens[user] */\n      dup3\n        /* \"contracts/DecentraWill.sol\":7652:7712  address[] memory allocatedTokens = userAllocatedTokens[user] */\n      dup3\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_137:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_137\n      jumpi\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DecentraWill.sol\":7728:7734  uint i */\n      0x00\n        /* \"contracts/DecentraWill.sol\":7723:7947  for (uint i = 0; i < allocatedTokens.length; i++) {... */\n    tag_138:\n        /* \"contracts/DecentraWill.sol\":7744:7759  allocatedTokens */\n      dup2\n        /* \"contracts/DecentraWill.sol\":7744:7766  allocatedTokens.length */\n      mload\n        /* \"contracts/DecentraWill.sol\":7740:7741  i */\n      dup2\n        /* \"contracts/DecentraWill.sol\":7740:7766  i < allocatedTokens.length */\n      lt\n        /* \"contracts/DecentraWill.sol\":7723:7947  for (uint i = 0; i < allocatedTokens.length; i++) {... */\n      iszero\n      tag_139\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":7792:7814  tokenAllocations[user] */\n      dup8\n      and\n        /* \"contracts/DecentraWill.sol\":7848:7849  0 */\n      0x00\n        /* \"contracts/DecentraWill.sol\":7792:7814  tokenAllocations[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":7792:7808  tokenAllocations */\n      0x01\n        /* \"contracts/DecentraWill.sol\":7792:7814  tokenAllocations[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DecentraWill.sol\":7815:7833  allocatedTokens[i] */\n      dup4\n      mload\n        /* \"contracts/DecentraWill.sol\":7848:7849  0 */\n      dup3\n      swap1\n        /* \"contracts/DecentraWill.sol\":7815:7830  allocatedTokens */\n      dup6\n      swap1\n        /* \"contracts/DecentraWill.sol\":7831:7832  i */\n      dup6\n      swap1\n        /* \"contracts/DecentraWill.sol\":7815:7833  allocatedTokens[i] */\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_142\n      tag_71\n      jump\t// in\n    tag_142:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":7792:7834  tokenAllocations[user][allocatedTokens[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DecentraWill.sol\":7792:7845  tokenAllocations[user][allocatedTokens[i]][recipient] */\n      0x00\n        /* \"contracts/DecentraWill.sol\":7835:7844  recipient */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":7792:7845  tokenAllocations[user][allocatedTokens[i]][recipient] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/DecentraWill.sol\":7792:7849  tokenAllocations[user][allocatedTokens[i]][recipient] > 0 */\n      gt\n        /* \"contracts/DecentraWill.sol\":7788:7936  if (tokenAllocations[user][allocatedTokens[i]][recipient] > 0) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"contracts/DecentraWill.sol\":7892:7896  true */\n      0x01\n        /* \"contracts/DecentraWill.sol\":7870:7896  hasOtherAllocations = true */\n      swap3\n      pop\n        /* \"contracts/DecentraWill.sol\":7915:7920  break */\n      jump(tag_139)\n        /* \"contracts/DecentraWill.sol\":7788:7936  if (tokenAllocations[user][allocatedTokens[i]][recipient] > 0) {... */\n    tag_143:\n        /* \"contracts/DecentraWill.sol\":7768:7771  i++ */\n      0x01\n      add\n        /* \"contracts/DecentraWill.sol\":7723:7947  for (uint i = 0; i < allocatedTokens.length; i++) {... */\n      jump(tag_138)\n    tag_139:\n      pop\n        /* \"contracts/DecentraWill.sol\":8058:8077  hasOtherAllocations */\n      dup2\n        /* \"contracts/DecentraWill.sol\":8053:8546  if (!hasOtherAllocations) {... */\n      tag_144\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":8127:8160  creatorsForBeneficiary[recipient] */\n      dup5\n      and\n        /* \"contracts/DecentraWill.sol\":8094:8124  address[] storage creatorsList */\n      0x00\n        /* \"contracts/DecentraWill.sol\":8127:8160  creatorsForBeneficiary[recipient] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":8127:8149  creatorsForBeneficiary */\n      0x04\n        /* \"contracts/DecentraWill.sol\":8127:8160  creatorsForBeneficiary[recipient] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/DecentraWill.sol\":8175:8535  for (uint i = 0; i < creatorsList.length; i++) {... */\n    tag_145:\n        /* \"contracts/DecentraWill.sol\":8196:8215  creatorsList.length */\n      dup2\n      sload\n        /* \"contracts/DecentraWill.sol\":8192:8215  i < creatorsList.length */\n      dup2\n      lt\n        /* \"contracts/DecentraWill.sol\":8175:8535  for (uint i = 0; i < creatorsList.length; i++) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"contracts/DecentraWill.sol\":8264:8268  user */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":8245:8268  creatorsList[i] == user */\n      and\n        /* \"contracts/DecentraWill.sol\":8245:8257  creatorsList */\n      dup3\n        /* \"contracts/DecentraWill.sol\":8258:8259  i */\n      dup3\n        /* \"contracts/DecentraWill.sol\":8245:8260  creatorsList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_149\n      tag_71\n      jump\t// in\n    tag_149:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DecentraWill.sol\":8245:8268  creatorsList[i] == user */\n      sub\n        /* \"contracts/DecentraWill.sol\":8241:8520  if (creatorsList[i] == user) {... */\n      tag_151\n      jumpi\n        /* \"contracts/DecentraWill.sol\":8307:8308  i */\n      dup1\n        /* \"contracts/DecentraWill.sol\":8293:8432  for (uint j = i; j < creatorsList.length - 1; j++) {... */\n    tag_152:\n        /* \"contracts/DecentraWill.sol\":8314:8333  creatorsList.length */\n      dup3\n      sload\n        /* \"contracts/DecentraWill.sol\":8314:8337  creatorsList.length - 1 */\n      tag_155\n      swap1\n        /* \"contracts/DecentraWill.sol\":8336:8337  1 */\n      0x01\n      swap1\n        /* \"contracts/DecentraWill.sol\":8314:8337  creatorsList.length - 1 */\n      tag_101\n      jump\t// in\n    tag_155:\n        /* \"contracts/DecentraWill.sol\":8310:8311  j */\n      dup2\n        /* \"contracts/DecentraWill.sol\":8310:8337  j < creatorsList.length - 1 */\n      lt\n        /* \"contracts/DecentraWill.sol\":8293:8432  for (uint j = i; j < creatorsList.length - 1; j++) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"contracts/DecentraWill.sol\":8389:8401  creatorsList */\n      dup3\n        /* \"contracts/DecentraWill.sol\":8402:8407  j + 1 */\n      tag_156\n        /* \"contracts/DecentraWill.sol\":8402:8403  j */\n      dup3\n        /* \"contracts/DecentraWill.sol\":8406:8407  1 */\n      0x01\n        /* \"contracts/DecentraWill.sol\":8402:8407  j + 1 */\n      tag_103\n      jump\t// in\n    tag_156:\n        /* \"contracts/DecentraWill.sol\":8389:8408  creatorsList[j + 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_71\n      jump\t// in\n    tag_158:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DecentraWill.sol\":8371:8383  creatorsList */\n      dup4\n        /* \"contracts/DecentraWill.sol\":8384:8385  j */\n      dup3\n        /* \"contracts/DecentraWill.sol\":8371:8386  creatorsList[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_161\n      jumpi\n      tag_161\n      tag_71\n      jump\t// in\n    tag_161:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/DecentraWill.sol\":8371:8408  creatorsList[j] = creatorsList[j + 1] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/DecentraWill.sol\":8339:8342  j++ */\n      add\n        /* \"contracts/DecentraWill.sol\":8293:8432  for (uint j = i; j < creatorsList.length - 1; j++) {... */\n      jump(tag_152)\n    tag_153:\n      pop\n        /* \"contracts/DecentraWill.sol\":8454:8466  creatorsList */\n      dup2\n        /* \"contracts/DecentraWill.sol\":8454:8472  creatorsList.pop() */\n      dup1\n      sload\n      dup1\n      tag_164\n      jumpi\n      tag_164\n      tag_112\n      jump\t// in\n    tag_164:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"contracts/DecentraWill.sol\":8495:8500  break */\n      jump(tag_146)\n        /* \"contracts/DecentraWill.sol\":8241:8520  if (creatorsList[i] == user) {... */\n    tag_151:\n        /* \"contracts/DecentraWill.sol\":8217:8220  i++ */\n      0x01\n      add\n        /* \"contracts/DecentraWill.sol\":8175:8535  for (uint i = 0; i < creatorsList.length; i++) {... */\n      jump(tag_145)\n    tag_146:\n      pop\n        /* \"contracts/DecentraWill.sol\":8079:8546  {... */\n      pop\n        /* \"contracts/DecentraWill.sol\":8053:8546  if (!hasOtherAllocations) {... */\n    tag_144:\n        /* \"contracts/DecentraWill.sol\":8591:8600  recipient */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":8561:8601  RecipientRemoved(user, token, recipient) */\n      and\n        /* \"contracts/DecentraWill.sol\":8584:8589  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":8561:8601  RecipientRemoved(user, token, recipient) */\n      and\n        /* \"contracts/DecentraWill.sol\":8578:8582  user */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":8561:8601  RecipientRemoved(user, token, recipient) */\n      and\n      0x8feee98c784e5546d0536039c928d5196ff80e1e67ab22fce85625ab401ce37e\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DecentraWill.sol\":5837:8651  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/DecentraWill.sol\":5715:8651  function removeRecipientForToken(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":2995:3358  function isRecipientOfToken(... */\n    tag_54:\n        /* \"contracts/DecentraWill.sol\":3126:3130  bool */\n      0x00\n      dup1\n        /* \"contracts/DecentraWill.sol\":3143:3328  for (uint i = 0; i < tokenRecipients[user][token].length; i++) {... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":3164:3185  tokenRecipients[user] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":3164:3179  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":3164:3185  tokenRecipients[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":3164:3192  tokenRecipients[user][token] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/DecentraWill.sol\":3164:3199  tokenRecipients[user][token].length */\n      sload\n        /* \"contracts/DecentraWill.sol\":3160:3199  i < tokenRecipients[user][token].length */\n      dup2\n      lt\n        /* \"contracts/DecentraWill.sol\":3143:3328  for (uint i = 0; i < tokenRecipients[user][token].length; i++) {... */\n      iszero\n      tag_168\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":3225:3246  tokenRecipients[user] */\n      dup6\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":3225:3240  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":3225:3246  tokenRecipients[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":3225:3253  tokenRecipients[user][token] */\n      dup9\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":3225:3256  tokenRecipients[user][token][i] */\n      dup1\n      sload\n        /* \"contracts/DecentraWill.sol\":3225:3269  tokenRecipients[user][token][i] == recipient */\n      swap2\n      dup6\n      and\n      swap2\n        /* \"contracts/DecentraWill.sol\":3254:3255  i */\n      dup4\n      swap1\n        /* \"contracts/DecentraWill.sol\":3225:3256  tokenRecipients[user][token][i] */\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_171\n      tag_71\n      jump\t// in\n    tag_171:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DecentraWill.sol\":3225:3269  tokenRecipients[user][token][i] == recipient */\n      sub\n        /* \"contracts/DecentraWill.sol\":3221:3317  if (tokenRecipients[user][token][i] == recipient) {... */\n      tag_173\n      jumpi\n        /* \"contracts/DecentraWill.sol\":3297:3301  true */\n      0x01\n        /* \"contracts/DecentraWill.sol\":3290:3301  return true */\n      swap2\n      pop\n      pop\n      jump(tag_166)\n        /* \"contracts/DecentraWill.sol\":3221:3317  if (tokenRecipients[user][token][i] == recipient) {... */\n    tag_173:\n        /* \"contracts/DecentraWill.sol\":3201:3204  i++ */\n      0x01\n      add\n        /* \"contracts/DecentraWill.sol\":3143:3328  for (uint i = 0; i < tokenRecipients[user][token].length; i++) {... */\n      jump(tag_167)\n    tag_168:\n      pop\n        /* \"contracts/DecentraWill.sol\":3345:3350  false */\n      0x00\n        /* \"contracts/DecentraWill.sol\":3338:3350  return false */\n      swap1\n      pop\n        /* \"contracts/DecentraWill.sol\":2995:3358  function isRecipientOfToken(... */\n    tag_166:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":8659:9942  function withdrawTokenForBeneficiary(... */\n    tag_58:\n        /* \"contracts/DecentraWill.sol\":8810:8856  isRecipientOfToken(creator, token, msg.sender) */\n      tag_175\n        /* \"contracts/DecentraWill.sol\":8829:8836  creator */\n      dup4\n        /* \"contracts/DecentraWill.sol\":8838:8843  token */\n      dup4\n        /* \"contracts/DecentraWill.sol\":8845:8855  msg.sender */\n      caller\n        /* \"contracts/DecentraWill.sol\":8810:8828  isRecipientOfToken */\n      tag_54\n        /* \"contracts/DecentraWill.sol\":8810:8856  isRecipientOfToken(creator, token, msg.sender) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/DecentraWill.sol\":8805:8911  if (!isRecipientOfToken(creator, token, msg.sender)) {... */\n      tag_176\n      jumpi\n        /* \"contracts/DecentraWill.sol\":8880:8899  RecipientNotFound() */\n      mload(0x40)\n      shl(0xe0, 0x66a21ffb)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DecentraWill.sol\":8805:8911  if (!isRecipientOfToken(creator, token, msg.sender)) {... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":8944:8969  tokenAllocations[creator] */\n      dup1\n      dup5\n      and\n        /* \"contracts/DecentraWill.sol\":8923:8941  uint256 allocation */\n      0x00\n        /* \"contracts/DecentraWill.sol\":8944:8969  tokenAllocations[creator] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":8944:8960  tokenAllocations */\n      0x01\n        /* \"contracts/DecentraWill.sol\":8944:8969  tokenAllocations[creator] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":8944:8976  tokenAllocations[creator][token] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/DecentraWill.sol\":8977:8987  msg.sender */\n      caller\n        /* \"contracts/DecentraWill.sol\":8944:8988  tokenAllocations[creator][token][msg.sender] */\n      dup4\n      mstore\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"contracts/DecentraWill.sol\":9003:9018  allocation == 0 */\n      dup2\n      swap1\n      sub\n        /* \"contracts/DecentraWill.sol\":8999:9077  if (allocation == 0) {... */\n      tag_177\n      jumpi\n        /* \"contracts/DecentraWill.sol\":9042:9065  NoAllocationAvailable() */\n      mload(0x40)\n      shl(0xe0, 0xdc49aee1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DecentraWill.sol\":8999:9077  if (allocation == 0) {... */\n    tag_177:\n        /* \"contracts/DecentraWill.sol\":9089:9113  uint256 withdrawalAmount */\n      0x00\n        /* \"contracts/DecentraWill.sol\":9135:9145  allocation */\n      dup2\n        /* \"contracts/DecentraWill.sol\":9117:9132  requestedAmount */\n      dup4\n        /* \"contracts/DecentraWill.sol\":9117:9145  requestedAmount > allocation */\n      gt\n        /* \"contracts/DecentraWill.sol\":9116:9203  (requestedAmount > allocation)... */\n      tag_178\n      jumpi\n        /* \"contracts/DecentraWill.sol\":9188:9203  requestedAmount */\n      dup3\n        /* \"contracts/DecentraWill.sol\":9116:9203  (requestedAmount > allocation)... */\n      jump(tag_179)\n    tag_178:\n        /* \"contracts/DecentraWill.sol\":9162:9172  allocation */\n      dup2\n        /* \"contracts/DecentraWill.sol\":9116:9203  (requestedAmount > allocation)... */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":9303:9328  tokenAllocations[creator] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":9303:9319  tokenAllocations */\n      0x01\n        /* \"contracts/DecentraWill.sol\":9303:9328  tokenAllocations[creator] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":9303:9335  tokenAllocations[creator][token] */\n      swap4\n      dup10\n      and\n      dup4\n      mstore\n      swap3\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/DecentraWill.sol\":9336:9346  msg.sender */\n      caller\n        /* \"contracts/DecentraWill.sol\":9303:9347  tokenAllocations[creator][token][msg.sender] */\n      dup4\n      mstore\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/DecentraWill.sol\":9303:9367  tokenAllocations[creator][token][msg.sender] -= withdrawalAmount */\n      dup1\n      sload\n        /* \"contracts/DecentraWill.sol\":9089:9203  uint256 withdrawalAmount = (requestedAmount > allocation)... */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"contracts/DecentraWill.sol\":9303:9347  tokenAllocations[creator][token][msg.sender] */\n      swap1\n      swap2\n        /* \"contracts/DecentraWill.sol\":9303:9328  tokenAllocations[creator] */\n      swap1\n        /* \"contracts/DecentraWill.sol\":9303:9367  tokenAllocations[creator][token][msg.sender] -= withdrawalAmount */\n      tag_180\n      swap1\n        /* \"contracts/DecentraWill.sol\":9089:9203  uint256 withdrawalAmount = (requestedAmount > allocation)... */\n      dup5\n      swap1\n        /* \"contracts/DecentraWill.sol\":9303:9367  tokenAllocations[creator][token][msg.sender] -= withdrawalAmount */\n      tag_101\n      jump\t// in\n    tag_180:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DecentraWill.sol\":9478:9593  IERC20(token).transferFrom(... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3741:3756   */\n      dup7\n      dup2\n      and\n        /* \"contracts/DecentraWill.sol\":9478:9593  IERC20(token).transferFrom(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3723:3757   */\n      mstore\n        /* \"contracts/DecentraWill.sol\":9541:9551  msg.sender */\n      caller\n        /* \"#utility.yul\":3773:3791   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3766:3809   */\n      mstore\n        /* \"#utility.yul\":3825:3843   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3818:3852   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/DecentraWill.sol\":9463:9475  bool success */\n      0x00\n      swap2\n        /* \"contracts/DecentraWill.sol\":9478:9504  IERC20(token).transferFrom */\n      swap1\n      dup7\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3658:3676   */\n      0x64\n      add\n        /* \"contracts/DecentraWill.sol\":9478:9593  IERC20(token).transferFrom(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"contracts/DecentraWill.sol\":9463:9593  bool success = IERC20(token).transferFrom(... */\n      swap1\n      pop\n        /* \"contracts/DecentraWill.sol\":9609:9616  success */\n      dup1\n        /* \"contracts/DecentraWill.sol\":9604:9668  if (!success) {... */\n      tag_187\n      jumpi\n        /* \"contracts/DecentraWill.sol\":9640:9656  TransferFailed() */\n      mload(0x40)\n      shl(0xe3, 0x12171d83)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/DecentraWill.sol\":9604:9668  if (!success) {... */\n    tag_187:\n        /* \"contracts/DecentraWill.sol\":9712:9722  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":9685:9741  Withdrawal(creator, token, msg.sender, withdrawalAmount) */\n      and\n        /* \"contracts/DecentraWill.sol\":9705:9710  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":9685:9741  Withdrawal(creator, token, msg.sender, withdrawalAmount) */\n      and\n        /* \"contracts/DecentraWill.sol\":9696:9703  creator */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":9685:9741  Withdrawal(creator, token, msg.sender, withdrawalAmount) */\n      and\n      0x342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e\n        /* \"contracts/DecentraWill.sol\":9724:9740  withdrawalAmount */\n      dup6\n        /* \"contracts/DecentraWill.sol\":9685:9741  Withdrawal(creator, token, msg.sender, withdrawalAmount) */\n      mload(0x40)\n      tag_188\n      swap2\n        /* \"#utility.yul\":1988:2013   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1976:1978   */\n      0x20\n        /* \"#utility.yul\":1961:1979   */\n      add\n      swap1\n        /* \"#utility.yul\":1842:2019   */\n      jump\n        /* \"contracts/DecentraWill.sol\":9685:9741  Withdrawal(creator, token, msg.sender, withdrawalAmount) */\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":9806:9831  tokenAllocations[creator] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":9806:9822  tokenAllocations */\n      0x01\n        /* \"contracts/DecentraWill.sol\":9806:9831  tokenAllocations[creator] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":9806:9838  tokenAllocations[creator][token] */\n      swap4\n      dup10\n      and\n      dup4\n      mstore\n      swap3\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"contracts/DecentraWill.sol\":9839:9849  msg.sender */\n      caller\n        /* \"contracts/DecentraWill.sol\":9806:9850  tokenAllocations[creator][token][msg.sender] */\n      dup4\n      mstore\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n      sload\n        /* \"contracts/DecentraWill.sol\":9806:9855  tokenAllocations[creator][token][msg.sender] == 0 */\n      swap1\n      sub\n        /* \"contracts/DecentraWill.sol\":9802:9935  if (tokenAllocations[creator][token][msg.sender] == 0) {... */\n      tag_190\n      jumpi\n        /* \"contracts/DecentraWill.sol\":9872:9923  removeRecipientForToken(creator, token, msg.sender) */\n      tag_190\n        /* \"contracts/DecentraWill.sol\":9896:9903  creator */\n      dup7\n        /* \"contracts/DecentraWill.sol\":9905:9910  token */\n      dup7\n        /* \"contracts/DecentraWill.sol\":9912:9922  msg.sender */\n      caller\n        /* \"contracts/DecentraWill.sol\":9872:9895  removeRecipientForToken */\n      tag_51\n        /* \"contracts/DecentraWill.sol\":9872:9923  removeRecipientForToken(creator, token, msg.sender) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/DecentraWill.sol\":8794:9942  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/DecentraWill.sol\":8659:9942  function withdrawTokenForBeneficiary(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":1975:2162  function _addTokenForUser(address user, address token) private {... */\n    tag_81:\n        /* \"contracts/DecentraWill.sol\":2054:2089  isTokenAllocatedByUser(user, token) */\n      tag_192\n        /* \"contracts/DecentraWill.sol\":2077:2081  user */\n      dup3\n        /* \"contracts/DecentraWill.sol\":2083:2088  token */\n      dup3\n        /* \"contracts/DecentraWill.sol\":2054:2076  isTokenAllocatedByUser */\n      tag_27\n        /* \"contracts/DecentraWill.sol\":2054:2089  isTokenAllocatedByUser(user, token) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/DecentraWill.sol\":2049:2155  if (!isTokenAllocatedByUser(user, token)) {... */\n      tag_193\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":2106:2131  userAllocatedTokens[user] */\n      dup3\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":2106:2125  userAllocatedTokens */\n      0x02\n        /* \"contracts/DecentraWill.sol\":2106:2131  userAllocatedTokens[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/DecentraWill.sol\":2106:2143  userAllocatedTokens[user].push(token) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      dup4\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DecentraWill.sol\":2049:2155  if (!isTokenAllocatedByUser(user, token)) {... */\n    tag_193:\n        /* \"contracts/DecentraWill.sol\":1975:2162  function _addTokenForUser(address user, address token) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":2252:2511  function _addRecipientForToken(... */\n    tag_83:\n        /* \"contracts/DecentraWill.sol\":2389:2431  isRecipientOfToken(user, token, recipient) */\n      tag_196\n        /* \"contracts/DecentraWill.sol\":2408:2412  user */\n      dup4\n        /* \"contracts/DecentraWill.sol\":2414:2419  token */\n      dup4\n        /* \"contracts/DecentraWill.sol\":2421:2430  recipient */\n      dup4\n        /* \"contracts/DecentraWill.sol\":2389:2407  isRecipientOfToken */\n      tag_54\n        /* \"contracts/DecentraWill.sol\":2389:2431  isRecipientOfToken(user, token, recipient) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/DecentraWill.sol\":2384:2504  if (!isRecipientOfToken(user, token, recipient)) {... */\n      tag_78\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":2448:2469  tokenRecipients[user] */\n      swap3\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":2448:2463  tokenRecipients */\n      0x03\n        /* \"contracts/DecentraWill.sol\":2448:2469  tokenRecipients[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DecentraWill.sol\":2448:2476  tokenRecipients[user][token] */\n      swap5\n      dup7\n      and\n      dup4\n      mstore\n      swap4\n      dup2\n      mstore\n      swap3\n      dup2\n      keccak256\n        /* \"contracts/DecentraWill.sol\":2448:2492  tokenRecipients[user][token].push(recipient) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup3\n      mstore\n      swap3\n      swap1\n      keccak256\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/DecentraWill.sol\":2252:2511  function _addRecipientForToken(... */\n      jump\t// out\n        /* \"contracts/DecentraWill.sol\":3446:3943  function _addCreatorForBeneficiary(... */\n    tag_85:\n        /* \"contracts/DecentraWill.sol\":3563:3581  bool creatorExists */\n      0x00\n        /* \"contracts/DecentraWill.sol\":3605:3611  uint i */\n      dup1\n        /* \"contracts/DecentraWill.sol\":3600:3830  for (uint i = 0; i < creatorsForBeneficiary[beneficiary].length; i++) {... */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":3621:3656  creatorsForBeneficiary[beneficiary] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":3621:3643  creatorsForBeneficiary */\n      0x04\n        /* \"contracts/DecentraWill.sol\":3621:3656  creatorsForBeneficiary[beneficiary] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":3621:3663  creatorsForBeneficiary[beneficiary].length */\n      sload\n        /* \"contracts/DecentraWill.sol\":3617:3663  i < creatorsForBeneficiary[beneficiary].length */\n      dup2\n      lt\n        /* \"contracts/DecentraWill.sol\":3600:3830  for (uint i = 0; i < creatorsForBeneficiary[beneficiary].length; i++) {... */\n      iszero\n      tag_201\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":3689:3724  creatorsForBeneficiary[beneficiary] */\n      dup4\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":3689:3711  creatorsForBeneficiary */\n      0x04\n        /* \"contracts/DecentraWill.sol\":3689:3724  creatorsForBeneficiary[beneficiary] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DecentraWill.sol\":3689:3727  creatorsForBeneficiary[beneficiary][i] */\n      dup1\n      sload\n        /* \"contracts/DecentraWill.sol\":3689:3738  creatorsForBeneficiary[beneficiary][i] == creator */\n      swap2\n      dup7\n      and\n      swap2\n        /* \"contracts/DecentraWill.sol\":3725:3726  i */\n      dup4\n      swap1\n        /* \"contracts/DecentraWill.sol\":3689:3727  creatorsForBeneficiary[beneficiary][i] */\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_204\n      tag_71\n      jump\t// in\n    tag_204:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DecentraWill.sol\":3689:3738  creatorsForBeneficiary[beneficiary][i] == creator */\n      sub\n        /* \"contracts/DecentraWill.sol\":3685:3819  if (creatorsForBeneficiary[beneficiary][i] == creator) {... */\n      tag_206\n      jumpi\n        /* \"contracts/DecentraWill.sol\":3775:3779  true */\n      0x01\n        /* \"contracts/DecentraWill.sol\":3759:3779  creatorExists = true */\n      swap2\n      pop\n        /* \"contracts/DecentraWill.sol\":3798:3803  break */\n      jump(tag_201)\n        /* \"contracts/DecentraWill.sol\":3685:3819  if (creatorsForBeneficiary[beneficiary][i] == creator) {... */\n    tag_206:\n        /* \"contracts/DecentraWill.sol\":3665:3668  i++ */\n      0x01\n      add\n        /* \"contracts/DecentraWill.sol\":3600:3830  for (uint i = 0; i < creatorsForBeneficiary[beneficiary].length; i++) {... */\n      jump(tag_200)\n    tag_201:\n      pop\n        /* \"contracts/DecentraWill.sol\":3845:3858  creatorExists */\n      dup1\n        /* \"contracts/DecentraWill.sol\":3840:3936  if (!creatorExists) {... */\n      tag_78\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DecentraWill.sol\":3875:3910  creatorsForBeneficiary[beneficiary] */\n      swap1\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DecentraWill.sol\":3875:3897  creatorsForBeneficiary */\n      0x04\n        /* \"contracts/DecentraWill.sol\":3875:3910  creatorsForBeneficiary[beneficiary] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/DecentraWill.sol\":3875:3924  creatorsForBeneficiary[beneficiary].push(creator) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DecentraWill.sol\":3446:3943  function _addCreatorForBeneficiary(... */\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_209:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_213:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:452   */\n    tag_16:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_215:\n        /* \"#utility.yul\":360:389   */\n      tag_216\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_209\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":350:389   */\n      swap2\n      pop\n        /* \"#utility.yul\":408:446   */\n      tag_217\n        /* \"#utility.yul\":442:444   */\n      0x20\n        /* \"#utility.yul\":431:440   */\n      dup5\n        /* \"#utility.yul\":427:445   */\n      add\n        /* \"#utility.yul\":408:446   */\n      tag_209\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":398:446   */\n      swap1\n      pop\n        /* \"#utility.yul\":192:452   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":457:1115   */\n    tag_19:\n        /* \"#utility.yul\":628:630   */\n      0x20\n        /* \"#utility.yul\":680:701   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":750:763   */\n      dup3\n      mload\n        /* \"#utility.yul\":653:671   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":772:794   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":599:603   */\n      0x00\n      swap2\n        /* \"#utility.yul\":628:630   */\n      swap1\n        /* \"#utility.yul\":851:866   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":825:827   */\n      0x40\n        /* \"#utility.yul\":810:828   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":599:603   */\n      dup5\n        /* \"#utility.yul\":894:1089   */\n    tag_219:\n        /* \"#utility.yul\":908:914   */\n      dup2\n        /* \"#utility.yul\":905:906   */\n      dup2\n        /* \"#utility.yul\":902:915   */\n      lt\n        /* \"#utility.yul\":894:1089   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":973:986   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":969:1008   */\n      and\n        /* \"#utility.yul\":957:1009   */\n      dup4\n      mstore\n        /* \"#utility.yul\":1064:1079   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1029:1041   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":1005:1006   */\n      0x01\n        /* \"#utility.yul\":923:932   */\n      add\n        /* \"#utility.yul\":894:1089   */\n      jump(tag_219)\n    tag_221:\n      pop\n        /* \"#utility.yul\":1106:1109   */\n      swap1\n      swap7\n        /* \"#utility.yul\":457:1115   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1120:1306   */\n    tag_22:\n        /* \"#utility.yul\":1179:1185   */\n      0x00\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1220:1229   */\n      dup3\n        /* \"#utility.yul\":1211:1218   */\n      dup5\n        /* \"#utility.yul\":1207:1230   */\n      sub\n        /* \"#utility.yul\":1203:1235   */\n      slt\n        /* \"#utility.yul\":1200:1252   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1248:1249   */\n      0x00\n        /* \"#utility.yul\":1245:1246   */\n      dup1\n        /* \"#utility.yul\":1238:1250   */\n      revert\n        /* \"#utility.yul\":1200:1252   */\n    tag_223:\n        /* \"#utility.yul\":1271:1300   */\n      tag_166\n        /* \"#utility.yul\":1290:1299   */\n      dup3\n        /* \"#utility.yul\":1271:1300   */\n      tag_209\n      jump\t// in\n        /* \"#utility.yul\":1503:1837   */\n    tag_32:\n        /* \"#utility.yul\":1580:1586   */\n      0x00\n        /* \"#utility.yul\":1588:1594   */\n      dup1\n        /* \"#utility.yul\":1596:1602   */\n      0x00\n        /* \"#utility.yul\":1649:1651   */\n      0x60\n        /* \"#utility.yul\":1637:1646   */\n      dup5\n        /* \"#utility.yul\":1628:1635   */\n      dup7\n        /* \"#utility.yul\":1624:1647   */\n      sub\n        /* \"#utility.yul\":1620:1652   */\n      slt\n        /* \"#utility.yul\":1617:1669   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1665:1666   */\n      0x00\n        /* \"#utility.yul\":1662:1663   */\n      dup1\n        /* \"#utility.yul\":1655:1667   */\n      revert\n        /* \"#utility.yul\":1617:1669   */\n    tag_227:\n        /* \"#utility.yul\":1688:1717   */\n      tag_228\n        /* \"#utility.yul\":1707:1716   */\n      dup5\n        /* \"#utility.yul\":1688:1717   */\n      tag_209\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1678:1717   */\n      swap3\n      pop\n        /* \"#utility.yul\":1736:1774   */\n      tag_229\n        /* \"#utility.yul\":1770:1772   */\n      0x20\n        /* \"#utility.yul\":1759:1768   */\n      dup6\n        /* \"#utility.yul\":1755:1773   */\n      add\n        /* \"#utility.yul\":1736:1774   */\n      tag_209\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1726:1774   */\n      swap2\n      pop\n        /* \"#utility.yul\":1793:1831   */\n      tag_230\n        /* \"#utility.yul\":1827:1829   */\n      0x40\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1830   */\n      add\n        /* \"#utility.yul\":1793:1831   */\n      tag_209\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1783:1831   */\n      swap1\n      pop\n        /* \"#utility.yul\":1503:1837   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2024:2278   */\n    tag_38:\n        /* \"#utility.yul\":2092:2098   */\n      0x00\n        /* \"#utility.yul\":2100:2106   */\n      dup1\n        /* \"#utility.yul\":2153:2155   */\n      0x40\n        /* \"#utility.yul\":2141:2150   */\n      dup4\n        /* \"#utility.yul\":2132:2139   */\n      dup6\n        /* \"#utility.yul\":2128:2151   */\n      sub\n        /* \"#utility.yul\":2124:2156   */\n      slt\n        /* \"#utility.yul\":2121:2173   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":2169:2170   */\n      0x00\n        /* \"#utility.yul\":2166:2167   */\n      dup1\n        /* \"#utility.yul\":2159:2171   */\n      revert\n        /* \"#utility.yul\":2121:2173   */\n    tag_233:\n        /* \"#utility.yul\":2192:2221   */\n      tag_234\n        /* \"#utility.yul\":2211:2220   */\n      dup4\n        /* \"#utility.yul\":2192:2221   */\n      tag_209\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2182:2221   */\n      swap5\n        /* \"#utility.yul\":2268:2270   */\n      0x20\n        /* \"#utility.yul\":2253:2271   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2240:2272   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2024:2278   */\n      jump\t// out\n        /* \"#utility.yul\":2491:2819   */\n    tag_44:\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2576:2582   */\n      dup1\n        /* \"#utility.yul\":2584:2590   */\n      0x00\n        /* \"#utility.yul\":2637:2639   */\n      0x60\n        /* \"#utility.yul\":2625:2634   */\n      dup5\n        /* \"#utility.yul\":2616:2623   */\n      dup7\n        /* \"#utility.yul\":2612:2635   */\n      sub\n        /* \"#utility.yul\":2608:2640   */\n      slt\n        /* \"#utility.yul\":2605:2657   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":2653:2654   */\n      0x00\n        /* \"#utility.yul\":2650:2651   */\n      dup1\n        /* \"#utility.yul\":2643:2655   */\n      revert\n        /* \"#utility.yul\":2605:2657   */\n    tag_237:\n        /* \"#utility.yul\":2676:2705   */\n      tag_238\n        /* \"#utility.yul\":2695:2704   */\n      dup5\n        /* \"#utility.yul\":2676:2705   */\n      tag_209\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2666:2705   */\n      swap3\n      pop\n        /* \"#utility.yul\":2724:2762   */\n      tag_239\n        /* \"#utility.yul\":2758:2760   */\n      0x20\n        /* \"#utility.yul\":2747:2756   */\n      dup6\n        /* \"#utility.yul\":2743:2761   */\n      add\n        /* \"#utility.yul\":2724:2762   */\n      tag_209\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2714:2762   */\n      swap2\n      pop\n        /* \"#utility.yul\":2809:2811   */\n      0x40\n        /* \"#utility.yul\":2798:2807   */\n      dup5\n        /* \"#utility.yul\":2794:2812   */\n      add\n        /* \"#utility.yul\":2781:2813   */\n      calldataload\n        /* \"#utility.yul\":2771:2813   */\n      swap1\n      pop\n        /* \"#utility.yul\":2491:2819   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2824:2951   */\n    tag_71:\n        /* \"#utility.yul\":2885:2895   */\n      0x4e487b71\n        /* \"#utility.yul\":2880:2883   */\n      0xe0\n        /* \"#utility.yul\":2876:2896   */\n      shl\n        /* \"#utility.yul\":2873:2874   */\n      0x00\n        /* \"#utility.yul\":2866:2897   */\n      mstore\n        /* \"#utility.yul\":2916:2920   */\n      0x32\n        /* \"#utility.yul\":2913:2914   */\n      0x04\n        /* \"#utility.yul\":2906:2921   */\n      mstore\n        /* \"#utility.yul\":2940:2944   */\n      0x24\n        /* \"#utility.yul\":2937:2938   */\n      0x00\n        /* \"#utility.yul\":2930:2945   */\n      revert\n        /* \"#utility.yul\":2956:3083   */\n    tag_210:\n        /* \"#utility.yul\":3017:3027   */\n      0x4e487b71\n        /* \"#utility.yul\":3012:3015   */\n      0xe0\n        /* \"#utility.yul\":3008:3028   */\n      shl\n        /* \"#utility.yul\":3005:3006   */\n      0x00\n        /* \"#utility.yul\":2998:3029   */\n      mstore\n        /* \"#utility.yul\":3048:3052   */\n      0x11\n        /* \"#utility.yul\":3045:3046   */\n      0x04\n        /* \"#utility.yul\":3038:3053   */\n      mstore\n        /* \"#utility.yul\":3072:3076   */\n      0x24\n        /* \"#utility.yul\":3069:3070   */\n      0x00\n        /* \"#utility.yul\":3062:3077   */\n      revert\n        /* \"#utility.yul\":3088:3216   */\n    tag_101:\n        /* \"#utility.yul\":3155:3164   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3176:3187   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3173:3210   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":3190:3208   */\n      tag_59\n      tag_210\n      jump\t// in\n        /* \"#utility.yul\":3221:3346   */\n    tag_103:\n        /* \"#utility.yul\":3286:3295   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3307:3317   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3304:3340   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":3320:3338   */\n      tag_59\n      tag_210\n      jump\t// in\n        /* \"#utility.yul\":3351:3478   */\n    tag_112:\n        /* \"#utility.yul\":3412:3422   */\n      0x4e487b71\n        /* \"#utility.yul\":3407:3410   */\n      0xe0\n        /* \"#utility.yul\":3403:3423   */\n      shl\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3393:3424   */\n      mstore\n        /* \"#utility.yul\":3443:3447   */\n      0x31\n        /* \"#utility.yul\":3440:3441   */\n      0x04\n        /* \"#utility.yul\":3433:3448   */\n      mstore\n        /* \"#utility.yul\":3467:3471   */\n      0x24\n        /* \"#utility.yul\":3464:3465   */\n      0x00\n        /* \"#utility.yul\":3457:3472   */\n      revert\n        /* \"#utility.yul\":3863:4140   */\n    tag_186:\n        /* \"#utility.yul\":3930:3936   */\n      0x00\n        /* \"#utility.yul\":3983:3985   */\n      0x20\n        /* \"#utility.yul\":3971:3980   */\n      dup3\n        /* \"#utility.yul\":3962:3969   */\n      dup5\n        /* \"#utility.yul\":3958:3981   */\n      sub\n        /* \"#utility.yul\":3954:3986   */\n      slt\n        /* \"#utility.yul\":3951:4003   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":3999:4000   */\n      0x00\n        /* \"#utility.yul\":3996:3997   */\n      dup1\n        /* \"#utility.yul\":3989:4001   */\n      revert\n        /* \"#utility.yul\":3951:4003   */\n    tag_251:\n        /* \"#utility.yul\":4031:4040   */\n      dup2\n        /* \"#utility.yul\":4025:4041   */\n      mload\n        /* \"#utility.yul\":4084:4089   */\n      dup1\n        /* \"#utility.yul\":4077:4090   */\n      iszero\n        /* \"#utility.yul\":4070:4091   */\n      iszero\n        /* \"#utility.yul\":4063:4068   */\n      dup2\n        /* \"#utility.yul\":4060:4092   */\n      eq\n        /* \"#utility.yul\":4050:4110   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":4106:4107   */\n      0x00\n        /* \"#utility.yul\":4103:4104   */\n      dup1\n        /* \"#utility.yul\":4096:4108   */\n      revert\n\n    auxdata: 0xa26469706673582212201a6547892384278ca6abe4e2360ebcae7106757f94d2bb0b2c5975217b16b70f64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_127": {
									"entryPoint": null,
									"id": 127,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x10A2 DUP1 PUSH2 0x2D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F15B1D9 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x5F15B1D9 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA2BDD08C EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xBD042D2E EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xC3698DA4 EQ PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAC0BE3F EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xDB36379 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE6CC31F EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x17A436ED EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x3112FCC6 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0xF31 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x12E PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x291 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x336 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x30B JUMPI PUSH2 0x30B PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x32E JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x242 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2BE JUMP JUMPDEST POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x358 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x38A JUMPI PUSH2 0x385 CALLER DUP5 DUP5 PUSH2 0x436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x3C5 SWAP1 DUP5 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x3D0 CALLER DUP5 DUP5 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x3DA CALLER DUP4 PUSH2 0xDD8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7AE337D22E62927A7215AD9C9A3A275863A9D305944D515360E7A2449DD85CCE DUP5 PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x441 DUP4 DUP4 DUP4 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x45E JUMPI PUSH1 0x40 MLOAD PUSH4 0x66A21FFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP5 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x4C7 JUMPI PUSH2 0x4C7 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4E8 JUMPI PUSH1 0x1 ADD PUSH2 0x460 JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x51B SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH2 0x551 DUP3 PUSH1 0x1 PUSH2 0x1026 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x561 JUMPI PUSH2 0x561 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP10 DUP4 AND DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x4EA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x60C JUMPI PUSH2 0x60C PUSH2 0x1039 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP9 DUP5 AND DUP1 DUP8 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP7 KECCAK256 SWAP4 DUP9 AND DUP7 MSTORE SWAP3 DUP5 MSTORE DUP1 DUP6 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 DUP5 MSTORE PUSH1 0x3 DUP4 MSTORE DUP1 DUP5 KECCAK256 SWAP2 DUP5 MSTORE SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x801 JUMPI POP PUSH0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x801 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x6C9 JUMPI PUSH2 0x6C9 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7F9 JUMPI DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x708 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x731 DUP3 PUSH1 0x1 PUSH2 0x1026 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x741 JUMPI PUSH2 0x741 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x77D JUMPI PUSH2 0x77D PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x6E4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x7D4 JUMPI PUSH2 0x7D4 PUSH2 0x1039 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x801 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x67C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x865 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x847 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x904 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 MLOAD DUP3 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x8A4 JUMPI PUSH2 0x8A4 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x8FC JUMPI PUSH1 0x1 SWAP3 POP PUSH2 0x904 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x86E JUMP JUMPDEST POP DUP2 PUSH2 0xA32 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xA2F JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x948 JUMPI PUSH2 0x948 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA27 JUMPI DUP1 JUMPDEST DUP3 SLOAD PUSH2 0x971 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x9F1 JUMPI DUP3 PUSH2 0x984 DUP3 PUSH1 0x1 PUSH2 0x1026 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x994 JUMPI PUSH2 0x994 PUSH2 0xFEB JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9C1 JUMPI PUSH2 0x9C1 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x963 JUMP JUMPDEST POP DUP2 DUP1 SLOAD DUP1 PUSH2 0xA02 JUMPI PUSH2 0xA02 PUSH2 0x1039 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x923 JUMP JUMPDEST POP POP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8FEEE98C784E5546D0536039C928D5196FF80E1E67AB22FCE85625AB401CE37E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xB19 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB11 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA87 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB30 DUP4 DUP4 CALLER PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x66A21FFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH4 0xDC49AEE1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0xBAB JUMPI DUP3 PUSH2 0xBAD JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xBF0 SWAP1 DUP5 SWAP1 PUSH2 0x1013 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC6E SWAP2 SWAP1 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP6 PUSH1 0x40 MLOAD PUSH2 0xCDD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xD25 JUMPI PUSH2 0xD25 DUP7 DUP7 CALLER PUSH2 0x436 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD37 DUP3 DUP3 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0xD79 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD88 DUP4 DUP4 DUP4 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x385 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE SWAP3 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP3 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xE52 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xE28 JUMPI PUSH2 0xE28 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE4A JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xDDB JUMP JUMPDEST POP DUP1 PUSH2 0x385 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEAF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xECE DUP4 PUSH2 0xE99 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDC PUSH1 0x20 DUP5 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF25 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF00 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB1E DUP3 PUSH2 0xE99 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF65 DUP5 PUSH2 0xE99 JUMP JUMPDEST SWAP3 POP PUSH2 0xF73 PUSH1 0x20 DUP6 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP2 POP PUSH2 0xF81 PUSH1 0x40 DUP6 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF9B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFA4 DUP4 PUSH2 0xE99 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCD DUP5 PUSH2 0xE99 JUMP JUMPDEST SWAP3 POP PUSH2 0xFDB PUSH1 0x20 DUP6 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x242 JUMPI PUSH2 0x242 PUSH2 0xFFF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x242 JUMPI PUSH2 0x242 PUSH2 0xFFF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB1E JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH6 0x47892384278C 0xA6 0xAB 0xE4 0xE2 CALLDATASIZE 0xE 0xBC 0xAE PUSH18 0x6757F94D2BB0B2C5975217B16B70F64736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "119:9826:1:-:0;;;953:51;;;;;;;;;-1:-1:-1;978:5:1;:18;;-1:-1:-1;;;;;;978:18:1;986:10;978:18;;;119:9826;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addCreatorForBeneficiary_348": {
									"entryPoint": 3544,
									"id": 348,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_addRecipientForToken_214": {
									"entryPoint": 3453,
									"id": 214,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_addTokenForUser_187": {
									"entryPoint": 3373,
									"id": 187,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@creatorsForBeneficiary_165": {
									"entryPoint": 831,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAllocatedTokensByUser_422": {
									"entryPoint": 584,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRecipientsByToken_439": {
									"entryPoint": 455,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isRecipientOfToken_296": {
									"entryPoint": 2692,
									"id": 296,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isTokenAllocatedByUser_252": {
									"entryPoint": 699,
									"id": 252,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_82": {
									"entryPoint": null,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeRecipientForToken_732": {
									"entryPoint": 1078,
									"id": 732,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAllocation_409": {
									"entryPoint": 883,
									"id": 409,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tokenAllocations_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawTokenForBeneficiary_840": {
									"entryPoint": 2853,
									"id": 840,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 3914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4142:2",
										"nodeType": "YulBlock",
										"src": "0:4142:2",
										"statements": [
											{
												"nativeSrc": "6:3:2",
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:2",
													"nodeType": "YulBlock",
													"src": "63:124:2",
													"statements": [
														{
															"nativeSrc": "73:29:2",
															"nodeType": "YulAssignment",
															"src": "73:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:2"
																},
																"nativeSrc": "82:20:2",
																"nodeType": "YulFunctionCall",
																"src": "82:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:2",
																"nodeType": "YulBlock",
																"src": "165:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:2",
																					"nodeType": "YulLiteral",
																					"src": "174:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:2",
																					"nodeType": "YulLiteral",
																					"src": "177:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:2"
																			},
																			"nativeSrc": "167:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:2"
																		},
																		"nativeSrc": "167:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:2",
																										"nodeType": "YulLiteral",
																										"src": "150:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:2",
																										"nodeType": "YulLiteral",
																										"src": "155:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:2",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:2"
																								},
																								"nativeSrc": "146:11:2",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:2"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:2",
																								"nodeType": "YulLiteral",
																								"src": "159:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:2"
																						},
																						"nativeSrc": "142:19:2",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:2"
																				},
																				"nativeSrc": "131:31:2",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:2"
																		},
																		"nativeSrc": "121:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:2"
																},
																"nativeSrc": "114:50:2",
																"nodeType": "YulFunctionCall",
																"src": "114:50:2"
															},
															"nativeSrc": "111:70:2",
															"nodeType": "YulIf",
															"src": "111:70:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:2",
														"nodeType": "YulTypedName",
														"src": "42:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:2",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "14:173:2"
											},
											{
												"body": {
													"nativeSrc": "279:173:2",
													"nodeType": "YulBlock",
													"src": "279:173:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:2",
																"nodeType": "YulBlock",
																"src": "325:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:2",
																					"nodeType": "YulLiteral",
																					"src": "334:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:2",
																					"nodeType": "YulLiteral",
																					"src": "337:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:2"
																			},
																			"nativeSrc": "327:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:2"
																		},
																		"nativeSrc": "327:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:2"
																		},
																		"nativeSrc": "296:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:2",
																		"nodeType": "YulLiteral",
																		"src": "321:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:2"
																},
																"nativeSrc": "292:32:2",
																"nodeType": "YulFunctionCall",
																"src": "292:32:2"
															},
															"nativeSrc": "289:52:2",
															"nodeType": "YulIf",
															"src": "289:52:2"
														},
														{
															"nativeSrc": "350:39:2",
															"nodeType": "YulAssignment",
															"src": "350:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:2"
																},
																"nativeSrc": "360:29:2",
																"nodeType": "YulFunctionCall",
																"src": "360:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:2"
																}
															]
														},
														{
															"nativeSrc": "398:48:2",
															"nodeType": "YulAssignment",
															"src": "398:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "431:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "431:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "442:2:2",
																				"nodeType": "YulLiteral",
																				"src": "442:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "427:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "427:3:2"
																		},
																		"nativeSrc": "427:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "427:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "408:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "408:18:2"
																},
																"nativeSrc": "408:38:2",
																"nodeType": "YulFunctionCall",
																"src": "408:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "398:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "192:260:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:2",
														"nodeType": "YulTypedName",
														"src": "237:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:2",
														"nodeType": "YulTypedName",
														"src": "248:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:2",
														"nodeType": "YulTypedName",
														"src": "260:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:2",
														"nodeType": "YulTypedName",
														"src": "268:6:2",
														"type": ""
													}
												],
												"src": "192:260:2"
											},
											{
												"body": {
													"nativeSrc": "608:507:2",
													"nodeType": "YulBlock",
													"src": "608:507:2",
													"statements": [
														{
															"nativeSrc": "618:12:2",
															"nodeType": "YulVariableDeclaration",
															"src": "618:12:2",
															"value": {
																"kind": "number",
																"nativeSrc": "628:2:2",
																"nodeType": "YulLiteral",
																"src": "628:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "622:2:2",
																	"nodeType": "YulTypedName",
																	"src": "622:2:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "639:32:2",
															"nodeType": "YulVariableDeclaration",
															"src": "639:32:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "657:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "657:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "668:2:2",
																		"nodeType": "YulLiteral",
																		"src": "668:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "653:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "653:3:2"
																},
																"nativeSrc": "653:18:2",
																"nodeType": "YulFunctionCall",
																"src": "653:18:2"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "643:6:2",
																	"nodeType": "YulTypedName",
																	"src": "643:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "687:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "687:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "698:2:2",
																		"nodeType": "YulLiteral",
																		"src": "698:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "680:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:2"
																},
																"nativeSrc": "680:21:2",
																"nodeType": "YulFunctionCall",
																"src": "680:21:2"
															},
															"nativeSrc": "680:21:2",
															"nodeType": "YulExpressionStatement",
															"src": "680:21:2"
														},
														{
															"nativeSrc": "710:17:2",
															"nodeType": "YulVariableDeclaration",
															"src": "710:17:2",
															"value": {
																"name": "tail_1",
																"nativeSrc": "721:6:2",
																"nodeType": "YulIdentifier",
																"src": "721:6:2"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "714:3:2",
																	"nodeType": "YulTypedName",
																	"src": "714:3:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "736:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "736:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "756:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "756:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "750:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "750:5:2"
																},
																"nativeSrc": "750:13:2",
																"nodeType": "YulFunctionCall",
																"src": "750:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "740:6:2",
																	"nodeType": "YulTypedName",
																	"src": "740:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "779:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "779:6:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "787:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "787:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "772:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:2"
																},
																"nativeSrc": "772:22:2",
																"nodeType": "YulFunctionCall",
																"src": "772:22:2"
															},
															"nativeSrc": "772:22:2",
															"nodeType": "YulExpressionStatement",
															"src": "772:22:2"
														},
														{
															"nativeSrc": "803:25:2",
															"nodeType": "YulAssignment",
															"src": "803:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "814:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "814:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "825:2:2",
																		"nodeType": "YulLiteral",
																		"src": "825:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "810:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "810:3:2"
																},
																"nativeSrc": "810:18:2",
																"nodeType": "YulFunctionCall",
																"src": "810:18:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "803:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:2"
																}
															]
														},
														{
															"nativeSrc": "837:29:2",
															"nodeType": "YulVariableDeclaration",
															"src": "837:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "855:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "855:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "863:2:2",
																		"nodeType": "YulLiteral",
																		"src": "863:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "851:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:2"
																},
																"nativeSrc": "851:15:2",
																"nodeType": "YulFunctionCall",
																"src": "851:15:2"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "841:6:2",
																	"nodeType": "YulTypedName",
																	"src": "841:6:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "875:10:2",
															"nodeType": "YulVariableDeclaration",
															"src": "875:10:2",
															"value": {
																"kind": "number",
																"nativeSrc": "884:1:2",
																"nodeType": "YulLiteral",
																"src": "884:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "879:1:2",
																	"nodeType": "YulTypedName",
																	"src": "879:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "943:146:2",
																"nodeType": "YulBlock",
																"src": "943:146:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "964:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "964:3:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "979:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "979:6:2"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "973:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "973:5:2"
																							},
																							"nativeSrc": "973:13:2",
																							"nodeType": "YulFunctionCall",
																							"src": "973:13:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "996:3:2",
																											"nodeType": "YulLiteral",
																											"src": "996:3:2",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1001:1:2",
																											"nodeType": "YulLiteral",
																											"src": "1001:1:2",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "992:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "992:3:2"
																									},
																									"nativeSrc": "992:11:2",
																									"nodeType": "YulFunctionCall",
																									"src": "992:11:2"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1005:1:2",
																									"nodeType": "YulLiteral",
																									"src": "1005:1:2",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "988:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "988:3:2"
																							},
																							"nativeSrc": "988:19:2",
																							"nodeType": "YulFunctionCall",
																							"src": "988:19:2"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "969:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "969:3:2"
																					},
																					"nativeSrc": "969:39:2",
																					"nodeType": "YulFunctionCall",
																					"src": "969:39:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "957:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "957:6:2"
																			},
																			"nativeSrc": "957:52:2",
																			"nodeType": "YulFunctionCall",
																			"src": "957:52:2"
																		},
																		"nativeSrc": "957:52:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "957:52:2"
																	},
																	{
																		"nativeSrc": "1022:19:2",
																		"nodeType": "YulAssignment",
																		"src": "1022:19:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "1033:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1033:3:2"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1038:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "1038:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1029:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "1029:3:2"
																			},
																			"nativeSrc": "1029:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1029:12:2"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1022:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:2"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1054:25:2",
																		"nodeType": "YulAssignment",
																		"src": "1054:25:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1068:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "1068:6:2"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1076:2:2",
																					"nodeType": "YulIdentifier",
																					"src": "1076:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1064:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "1064:3:2"
																			},
																			"nativeSrc": "1064:15:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1064:15:2"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "1054:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "905:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "905:1:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "908:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "902:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "902:2:2"
																},
																"nativeSrc": "902:13:2",
																"nodeType": "YulFunctionCall",
																"src": "902:13:2"
															},
															"nativeSrc": "894:195:2",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "916:18:2",
																"nodeType": "YulBlock",
																"src": "916:18:2",
																"statements": [
																	{
																		"nativeSrc": "918:14:2",
																		"nodeType": "YulAssignment",
																		"src": "918:14:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "927:1:2",
																					"nodeType": "YulIdentifier",
																					"src": "927:1:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "930:1:2",
																					"nodeType": "YulLiteral",
																					"src": "930:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "923:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "923:3:2"
																			},
																			"nativeSrc": "923:9:2",
																			"nodeType": "YulFunctionCall",
																			"src": "923:9:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "918:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "918:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "898:3:2",
																"nodeType": "YulBlock",
																"src": "898:3:2",
																"statements": []
															},
															"src": "894:195:2"
														},
														{
															"nativeSrc": "1098:11:2",
															"nodeType": "YulAssignment",
															"src": "1098:11:2",
															"value": {
																"name": "pos",
																"nativeSrc": "1106:3:2",
																"nodeType": "YulIdentifier",
																"src": "1106:3:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1098:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1098:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "457:658:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "577:9:2",
														"nodeType": "YulTypedName",
														"src": "577:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "588:6:2",
														"nodeType": "YulTypedName",
														"src": "588:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "599:4:2",
														"nodeType": "YulTypedName",
														"src": "599:4:2",
														"type": ""
													}
												],
												"src": "457:658:2"
											},
											{
												"body": {
													"nativeSrc": "1190:116:2",
													"nodeType": "YulBlock",
													"src": "1190:116:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1236:16:2",
																"nodeType": "YulBlock",
																"src": "1236:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1245:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1245:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1248:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1248:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1238:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1238:6:2"
																			},
																			"nativeSrc": "1238:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1238:12:2"
																		},
																		"nativeSrc": "1238:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1238:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1211:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1211:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1220:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1207:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:2"
																		},
																		"nativeSrc": "1207:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1207:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1232:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1203:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1203:3:2"
																},
																"nativeSrc": "1203:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1203:32:2"
															},
															"nativeSrc": "1200:52:2",
															"nodeType": "YulIf",
															"src": "1200:52:2"
														},
														{
															"nativeSrc": "1261:39:2",
															"nodeType": "YulAssignment",
															"src": "1261:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1290:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1290:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1271:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "1271:18:2"
																},
																"nativeSrc": "1271:29:2",
																"nodeType": "YulFunctionCall",
																"src": "1271:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1261:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1261:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1120:186:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1156:9:2",
														"nodeType": "YulTypedName",
														"src": "1156:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1167:7:2",
														"nodeType": "YulTypedName",
														"src": "1167:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1179:6:2",
														"nodeType": "YulTypedName",
														"src": "1179:6:2",
														"type": ""
													}
												],
												"src": "1120:186:2"
											},
											{
												"body": {
													"nativeSrc": "1406:92:2",
													"nodeType": "YulBlock",
													"src": "1406:92:2",
													"statements": [
														{
															"nativeSrc": "1416:26:2",
															"nodeType": "YulAssignment",
															"src": "1416:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1428:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1428:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1439:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1439:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1424:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1424:3:2"
																},
																"nativeSrc": "1424:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1424:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1416:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1416:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1458:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1458:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1483:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1483:6:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1476:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "1476:6:2"
																				},
																				"nativeSrc": "1476:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1476:14:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1469:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1469:6:2"
																		},
																		"nativeSrc": "1469:22:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1469:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1451:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:2"
																},
																"nativeSrc": "1451:41:2",
																"nodeType": "YulFunctionCall",
																"src": "1451:41:2"
															},
															"nativeSrc": "1451:41:2",
															"nodeType": "YulExpressionStatement",
															"src": "1451:41:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1311:187:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1375:9:2",
														"nodeType": "YulTypedName",
														"src": "1375:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1386:6:2",
														"nodeType": "YulTypedName",
														"src": "1386:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1397:4:2",
														"nodeType": "YulTypedName",
														"src": "1397:4:2",
														"type": ""
													}
												],
												"src": "1311:187:2"
											},
											{
												"body": {
													"nativeSrc": "1607:230:2",
													"nodeType": "YulBlock",
													"src": "1607:230:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1653:16:2",
																"nodeType": "YulBlock",
																"src": "1653:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1662:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1662:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1665:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1665:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1655:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1655:6:2"
																			},
																			"nativeSrc": "1655:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1655:12:2"
																		},
																		"nativeSrc": "1655:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1655:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1628:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1628:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1637:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1637:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1624:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1624:3:2"
																		},
																		"nativeSrc": "1624:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1624:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1649:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1649:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1620:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1620:3:2"
																},
																"nativeSrc": "1620:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1620:32:2"
															},
															"nativeSrc": "1617:52:2",
															"nodeType": "YulIf",
															"src": "1617:52:2"
														},
														{
															"nativeSrc": "1678:39:2",
															"nodeType": "YulAssignment",
															"src": "1678:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1707:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1707:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1688:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "1688:18:2"
																},
																"nativeSrc": "1688:29:2",
																"nodeType": "YulFunctionCall",
																"src": "1688:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1678:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:2"
																}
															]
														},
														{
															"nativeSrc": "1726:48:2",
															"nodeType": "YulAssignment",
															"src": "1726:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1759:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1759:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1770:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1770:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1755:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1755:3:2"
																		},
																		"nativeSrc": "1755:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1755:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1736:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "1736:18:2"
																},
																"nativeSrc": "1736:38:2",
																"nodeType": "YulFunctionCall",
																"src": "1736:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1726:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1726:6:2"
																}
															]
														},
														{
															"nativeSrc": "1783:48:2",
															"nodeType": "YulAssignment",
															"src": "1783:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1816:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1816:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1827:2:2",
																				"nodeType": "YulLiteral",
																				"src": "1827:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1812:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1812:3:2"
																		},
																		"nativeSrc": "1812:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1812:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1793:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "1793:18:2"
																},
																"nativeSrc": "1793:38:2",
																"nodeType": "YulFunctionCall",
																"src": "1793:38:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1783:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nativeSrc": "1503:334:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1557:9:2",
														"nodeType": "YulTypedName",
														"src": "1557:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1568:7:2",
														"nodeType": "YulTypedName",
														"src": "1568:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1580:6:2",
														"nodeType": "YulTypedName",
														"src": "1580:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1588:6:2",
														"nodeType": "YulTypedName",
														"src": "1588:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1596:6:2",
														"nodeType": "YulTypedName",
														"src": "1596:6:2",
														"type": ""
													}
												],
												"src": "1503:334:2"
											},
											{
												"body": {
													"nativeSrc": "1943:76:2",
													"nodeType": "YulBlock",
													"src": "1943:76:2",
													"statements": [
														{
															"nativeSrc": "1953:26:2",
															"nodeType": "YulAssignment",
															"src": "1953:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1965:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1965:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1976:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1976:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1961:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:2"
																},
																"nativeSrc": "1961:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1961:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1953:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1953:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1995:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1995:9:2"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2006:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2006:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1988:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1988:6:2"
																},
																"nativeSrc": "1988:25:2",
																"nodeType": "YulFunctionCall",
																"src": "1988:25:2"
															},
															"nativeSrc": "1988:25:2",
															"nodeType": "YulExpressionStatement",
															"src": "1988:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1842:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1912:9:2",
														"nodeType": "YulTypedName",
														"src": "1912:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1923:6:2",
														"nodeType": "YulTypedName",
														"src": "1923:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1934:4:2",
														"nodeType": "YulTypedName",
														"src": "1934:4:2",
														"type": ""
													}
												],
												"src": "1842:177:2"
											},
											{
												"body": {
													"nativeSrc": "2111:167:2",
													"nodeType": "YulBlock",
													"src": "2111:167:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2157:16:2",
																"nodeType": "YulBlock",
																"src": "2157:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2166:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2166:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2169:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2169:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2159:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2159:6:2"
																			},
																			"nativeSrc": "2159:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2159:12:2"
																		},
																		"nativeSrc": "2159:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2159:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2132:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2132:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2141:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2141:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2128:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2128:3:2"
																		},
																		"nativeSrc": "2128:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2128:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2153:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2153:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2124:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2124:3:2"
																},
																"nativeSrc": "2124:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2124:32:2"
															},
															"nativeSrc": "2121:52:2",
															"nodeType": "YulIf",
															"src": "2121:52:2"
														},
														{
															"nativeSrc": "2182:39:2",
															"nodeType": "YulAssignment",
															"src": "2182:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2211:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2211:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2192:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "2192:18:2"
																},
																"nativeSrc": "2192:29:2",
																"nodeType": "YulFunctionCall",
																"src": "2192:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2182:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:2"
																}
															]
														},
														{
															"nativeSrc": "2230:42:2",
															"nodeType": "YulAssignment",
															"src": "2230:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2257:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2268:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2268:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2253:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2253:3:2"
																		},
																		"nativeSrc": "2253:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2253:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2240:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "2240:12:2"
																},
																"nativeSrc": "2240:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2240:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2230:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2024:254:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2069:9:2",
														"nodeType": "YulTypedName",
														"src": "2069:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2080:7:2",
														"nodeType": "YulTypedName",
														"src": "2080:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2092:6:2",
														"nodeType": "YulTypedName",
														"src": "2092:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2100:6:2",
														"nodeType": "YulTypedName",
														"src": "2100:6:2",
														"type": ""
													}
												],
												"src": "2024:254:2"
											},
											{
												"body": {
													"nativeSrc": "2384:102:2",
													"nodeType": "YulBlock",
													"src": "2384:102:2",
													"statements": [
														{
															"nativeSrc": "2394:26:2",
															"nodeType": "YulAssignment",
															"src": "2394:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2406:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2406:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2417:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2417:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2402:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2402:3:2"
																},
																"nativeSrc": "2402:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2402:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2394:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2394:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2436:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2436:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2451:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2451:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2467:3:2",
																								"nodeType": "YulLiteral",
																								"src": "2467:3:2",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2472:1:2",
																								"nodeType": "YulLiteral",
																								"src": "2472:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2463:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "2463:3:2"
																						},
																						"nativeSrc": "2463:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "2463:11:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2476:1:2",
																						"nodeType": "YulLiteral",
																						"src": "2476:1:2",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2459:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2459:3:2"
																				},
																				"nativeSrc": "2459:19:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2459:19:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2447:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:2"
																		},
																		"nativeSrc": "2447:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:32:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2429:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:2"
																},
																"nativeSrc": "2429:51:2",
																"nodeType": "YulFunctionCall",
																"src": "2429:51:2"
															},
															"nativeSrc": "2429:51:2",
															"nodeType": "YulExpressionStatement",
															"src": "2429:51:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2283:203:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2353:9:2",
														"nodeType": "YulTypedName",
														"src": "2353:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2364:6:2",
														"nodeType": "YulTypedName",
														"src": "2364:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2375:4:2",
														"nodeType": "YulTypedName",
														"src": "2375:4:2",
														"type": ""
													}
												],
												"src": "2283:203:2"
											},
											{
												"body": {
													"nativeSrc": "2595:224:2",
													"nodeType": "YulBlock",
													"src": "2595:224:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2641:16:2",
																"nodeType": "YulBlock",
																"src": "2641:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2650:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2653:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2653:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2643:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2643:6:2"
																			},
																			"nativeSrc": "2643:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2643:12:2"
																		},
																		"nativeSrc": "2643:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2643:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2616:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2616:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2625:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2625:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2612:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:2"
																		},
																		"nativeSrc": "2612:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2612:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2637:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2637:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2608:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2608:3:2"
																},
																"nativeSrc": "2608:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2608:32:2"
															},
															"nativeSrc": "2605:52:2",
															"nodeType": "YulIf",
															"src": "2605:52:2"
														},
														{
															"nativeSrc": "2666:39:2",
															"nodeType": "YulAssignment",
															"src": "2666:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2695:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2695:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2676:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "2676:18:2"
																},
																"nativeSrc": "2676:29:2",
																"nodeType": "YulFunctionCall",
																"src": "2676:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2666:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2666:6:2"
																}
															]
														},
														{
															"nativeSrc": "2714:48:2",
															"nodeType": "YulAssignment",
															"src": "2714:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2747:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2747:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2758:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2758:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2743:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2743:3:2"
																		},
																		"nativeSrc": "2743:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2743:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2724:18:2",
																	"nodeType": "YulIdentifier",
																	"src": "2724:18:2"
																},
																"nativeSrc": "2724:38:2",
																"nodeType": "YulFunctionCall",
																"src": "2724:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2714:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:2"
																}
															]
														},
														{
															"nativeSrc": "2771:42:2",
															"nodeType": "YulAssignment",
															"src": "2771:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2798:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2798:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2809:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2809:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2794:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:2"
																		},
																		"nativeSrc": "2794:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2794:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2781:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "2781:12:2"
																},
																"nativeSrc": "2781:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2781:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2771:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2491:328:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2545:9:2",
														"nodeType": "YulTypedName",
														"src": "2545:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2556:7:2",
														"nodeType": "YulTypedName",
														"src": "2556:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2568:6:2",
														"nodeType": "YulTypedName",
														"src": "2568:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2576:6:2",
														"nodeType": "YulTypedName",
														"src": "2576:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2584:6:2",
														"nodeType": "YulTypedName",
														"src": "2584:6:2",
														"type": ""
													}
												],
												"src": "2491:328:2"
											},
											{
												"body": {
													"nativeSrc": "2856:95:2",
													"nodeType": "YulBlock",
													"src": "2856:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2873:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2873:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2880:3:2",
																				"nodeType": "YulLiteral",
																				"src": "2880:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2885:10:2",
																				"nodeType": "YulLiteral",
																				"src": "2885:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2876:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:2"
																		},
																		"nativeSrc": "2876:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2876:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2866:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2866:6:2"
																},
																"nativeSrc": "2866:31:2",
																"nodeType": "YulFunctionCall",
																"src": "2866:31:2"
															},
															"nativeSrc": "2866:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "2866:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2913:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2913:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2916:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2916:4:2",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2906:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2906:6:2"
																},
																"nativeSrc": "2906:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2906:15:2"
															},
															"nativeSrc": "2906:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2906:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2937:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2937:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2940:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2940:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2930:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2930:6:2"
																},
																"nativeSrc": "2930:15:2",
																"nodeType": "YulFunctionCall",
																"src": "2930:15:2"
															},
															"nativeSrc": "2930:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "2930:15:2"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "2824:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2824:127:2"
											},
											{
												"body": {
													"nativeSrc": "2988:95:2",
													"nodeType": "YulBlock",
													"src": "2988:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3005:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3005:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3012:3:2",
																				"nodeType": "YulLiteral",
																				"src": "3012:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3017:10:2",
																				"nodeType": "YulLiteral",
																				"src": "3017:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3008:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3008:3:2"
																		},
																		"nativeSrc": "3008:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3008:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2998:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2998:6:2"
																},
																"nativeSrc": "2998:31:2",
																"nodeType": "YulFunctionCall",
																"src": "2998:31:2"
															},
															"nativeSrc": "2998:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "2998:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3045:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3045:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3048:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3048:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3038:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3038:6:2"
																},
																"nativeSrc": "3038:15:2",
																"nodeType": "YulFunctionCall",
																"src": "3038:15:2"
															},
															"nativeSrc": "3038:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "3038:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3069:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3069:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3072:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3072:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3062:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3062:6:2"
																},
																"nativeSrc": "3062:15:2",
																"nodeType": "YulFunctionCall",
																"src": "3062:15:2"
															},
															"nativeSrc": "3062:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "3062:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2956:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "2956:127:2"
											},
											{
												"body": {
													"nativeSrc": "3137:79:2",
													"nodeType": "YulBlock",
													"src": "3137:79:2",
													"statements": [
														{
															"nativeSrc": "3147:17:2",
															"nodeType": "YulAssignment",
															"src": "3147:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3159:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3159:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3162:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3162:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3155:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3155:3:2"
																},
																"nativeSrc": "3155:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3155:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3147:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3147:4:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3188:22:2",
																"nodeType": "YulBlock",
																"src": "3188:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3190:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3190:16:2"
																			},
																			"nativeSrc": "3190:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3190:18:2"
																		},
																		"nativeSrc": "3190:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3190:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3179:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3179:4:2"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3185:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3185:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3176:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3176:2:2"
																},
																"nativeSrc": "3176:11:2",
																"nodeType": "YulFunctionCall",
																"src": "3176:11:2"
															},
															"nativeSrc": "3173:37:2",
															"nodeType": "YulIf",
															"src": "3173:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3088:128:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3119:1:2",
														"nodeType": "YulTypedName",
														"src": "3119:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3122:1:2",
														"nodeType": "YulTypedName",
														"src": "3122:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3128:4:2",
														"nodeType": "YulTypedName",
														"src": "3128:4:2",
														"type": ""
													}
												],
												"src": "3088:128:2"
											},
											{
												"body": {
													"nativeSrc": "3269:77:2",
													"nodeType": "YulBlock",
													"src": "3269:77:2",
													"statements": [
														{
															"nativeSrc": "3279:16:2",
															"nodeType": "YulAssignment",
															"src": "3279:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3290:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3290:1:2"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3293:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3293:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3286:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3286:3:2"
																},
																"nativeSrc": "3286:9:2",
																"nodeType": "YulFunctionCall",
																"src": "3286:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3279:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3279:3:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3318:22:2",
																"nodeType": "YulBlock",
																"src": "3318:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3320:16:2",
																				"nodeType": "YulIdentifier",
																				"src": "3320:16:2"
																			},
																			"nativeSrc": "3320:18:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3320:18:2"
																		},
																		"nativeSrc": "3320:18:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3320:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3310:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "3310:1:2"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3313:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3313:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3307:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "3307:2:2"
																},
																"nativeSrc": "3307:10:2",
																"nodeType": "YulFunctionCall",
																"src": "3307:10:2"
															},
															"nativeSrc": "3304:36:2",
															"nodeType": "YulIf",
															"src": "3304:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3221:125:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3252:1:2",
														"nodeType": "YulTypedName",
														"src": "3252:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3255:1:2",
														"nodeType": "YulTypedName",
														"src": "3255:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3261:3:2",
														"nodeType": "YulTypedName",
														"src": "3261:3:2",
														"type": ""
													}
												],
												"src": "3221:125:2"
											},
											{
												"body": {
													"nativeSrc": "3383:95:2",
													"nodeType": "YulBlock",
													"src": "3383:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3400:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3400:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3407:3:2",
																				"nodeType": "YulLiteral",
																				"src": "3407:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3412:10:2",
																				"nodeType": "YulLiteral",
																				"src": "3412:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3403:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:2"
																		},
																		"nativeSrc": "3403:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3393:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3393:6:2"
																},
																"nativeSrc": "3393:31:2",
																"nodeType": "YulFunctionCall",
																"src": "3393:31:2"
															},
															"nativeSrc": "3393:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "3393:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3440:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3440:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3443:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3443:4:2",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3433:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3433:6:2"
																},
																"nativeSrc": "3433:15:2",
																"nodeType": "YulFunctionCall",
																"src": "3433:15:2"
															},
															"nativeSrc": "3433:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "3433:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3464:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3464:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3467:4:2",
																		"nodeType": "YulLiteral",
																		"src": "3467:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3457:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3457:6:2"
																},
																"nativeSrc": "3457:15:2",
																"nodeType": "YulFunctionCall",
																"src": "3457:15:2"
															},
															"nativeSrc": "3457:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "3457:15:2"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "3351:127:2",
												"nodeType": "YulFunctionDefinition",
												"src": "3351:127:2"
											},
											{
												"body": {
													"nativeSrc": "3640:218:2",
													"nodeType": "YulBlock",
													"src": "3640:218:2",
													"statements": [
														{
															"nativeSrc": "3650:26:2",
															"nodeType": "YulAssignment",
															"src": "3650:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3662:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3662:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3673:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3658:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3658:3:2"
																},
																"nativeSrc": "3658:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3658:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3650:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3650:4:2"
																}
															]
														},
														{
															"nativeSrc": "3685:29:2",
															"nodeType": "YulVariableDeclaration",
															"src": "3685:29:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3703:3:2",
																				"nodeType": "YulLiteral",
																				"src": "3703:3:2",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3708:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3708:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3699:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3699:3:2"
																		},
																		"nativeSrc": "3699:11:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3699:11:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3712:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3712:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3695:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3695:3:2"
																},
																"nativeSrc": "3695:19:2",
																"nodeType": "YulFunctionCall",
																"src": "3695:19:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3689:2:2",
																	"nodeType": "YulTypedName",
																	"src": "3689:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3730:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3730:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3745:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3745:6:2"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3753:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "3753:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3741:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3741:3:2"
																		},
																		"nativeSrc": "3741:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3741:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3723:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3723:6:2"
																},
																"nativeSrc": "3723:34:2",
																"nodeType": "YulFunctionCall",
																"src": "3723:34:2"
															},
															"nativeSrc": "3723:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "3723:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3777:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3777:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3788:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3788:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3773:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3773:3:2"
																		},
																		"nativeSrc": "3773:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3773:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3797:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3797:6:2"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "3805:2:2",
																				"nodeType": "YulIdentifier",
																				"src": "3805:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3793:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3793:3:2"
																		},
																		"nativeSrc": "3793:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3793:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3766:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:2"
																},
																"nativeSrc": "3766:43:2",
																"nodeType": "YulFunctionCall",
																"src": "3766:43:2"
															},
															"nativeSrc": "3766:43:2",
															"nodeType": "YulExpressionStatement",
															"src": "3766:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3829:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3829:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3840:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3840:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3825:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3825:3:2"
																		},
																		"nativeSrc": "3825:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3825:18:2"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3845:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3845:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3818:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3818:6:2"
																},
																"nativeSrc": "3818:34:2",
																"nodeType": "YulFunctionCall",
																"src": "3818:34:2"
															},
															"nativeSrc": "3818:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "3818:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3483:375:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3593:9:2",
														"nodeType": "YulTypedName",
														"src": "3593:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3604:6:2",
														"nodeType": "YulTypedName",
														"src": "3604:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3612:6:2",
														"nodeType": "YulTypedName",
														"src": "3612:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3620:6:2",
														"nodeType": "YulTypedName",
														"src": "3620:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3631:4:2",
														"nodeType": "YulTypedName",
														"src": "3631:4:2",
														"type": ""
													}
												],
												"src": "3483:375:2"
											},
											{
												"body": {
													"nativeSrc": "3941:199:2",
													"nodeType": "YulBlock",
													"src": "3941:199:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:16:2",
																"nodeType": "YulBlock",
																"src": "3987:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3996:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3996:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3999:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3999:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3989:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3989:6:2"
																			},
																			"nativeSrc": "3989:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3989:12:2"
																		},
																		"nativeSrc": "3989:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3989:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3962:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3962:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3971:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3971:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3958:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3958:3:2"
																		},
																		"nativeSrc": "3958:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3958:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3954:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3954:3:2"
																},
																"nativeSrc": "3954:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3954:32:2"
															},
															"nativeSrc": "3951:52:2",
															"nodeType": "YulIf",
															"src": "3951:52:2"
														},
														{
															"nativeSrc": "4012:29:2",
															"nodeType": "YulVariableDeclaration",
															"src": "4012:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4031:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4031:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4025:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:2"
																},
																"nativeSrc": "4025:16:2",
																"nodeType": "YulFunctionCall",
																"src": "4025:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4016:5:2",
																	"nodeType": "YulTypedName",
																	"src": "4016:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4094:16:2",
																"nodeType": "YulBlock",
																"src": "4094:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4103:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4103:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4106:1:2",
																					"nodeType": "YulLiteral",
																					"src": "4106:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4096:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "4096:6:2"
																			},
																			"nativeSrc": "4096:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4096:12:2"
																		},
																		"nativeSrc": "4096:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4096:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4063:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "4063:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4084:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "4084:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4077:6:2",
																							"nodeType": "YulIdentifier",
																							"src": "4077:6:2"
																						},
																						"nativeSrc": "4077:13:2",
																						"nodeType": "YulFunctionCall",
																						"src": "4077:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4070:6:2",
																					"nodeType": "YulIdentifier",
																					"src": "4070:6:2"
																				},
																				"nativeSrc": "4070:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "4070:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4060:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "4060:2:2"
																		},
																		"nativeSrc": "4060:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4053:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4053:6:2"
																},
																"nativeSrc": "4053:40:2",
																"nodeType": "YulFunctionCall",
																"src": "4053:40:2"
															},
															"nativeSrc": "4050:60:2",
															"nodeType": "YulIf",
															"src": "4050:60:2"
														},
														{
															"nativeSrc": "4119:15:2",
															"nodeType": "YulAssignment",
															"src": "4119:15:2",
															"value": {
																"name": "value",
																"nativeSrc": "4129:5:2",
																"nodeType": "YulIdentifier",
																"src": "4129:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4119:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "4119:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3863:277:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3907:9:2",
														"nodeType": "YulTypedName",
														"src": "3907:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3918:7:2",
														"nodeType": "YulTypedName",
														"src": "3918:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3930:6:2",
														"nodeType": "YulTypedName",
														"src": "3930:6:2",
														"type": ""
													}
												],
												"src": "3863:277:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c80635f15b1d9116100635780635f15b1d9146101675780638da5cb5b1461017c578063a2bdd08c1461018e578063bd042d2e146101a1578063c3698da4146101b4575f80fd5b80630ac0be3f1461009f5780630db36379146100c85780630e6cc31f146100db57806317a436ed146100fe5780633112fcc61461013c575b5f80fd5b6100b26100ad366004610eb4565b6101c7565b6040516100bf9190610ee5565b60405180910390f35b6100b26100d6366004610f31565b610248565b6100ee6100e9366004610eb4565b6102bb565b60405190151581526020016100bf565b61012e61010c366004610f4a565b600160209081525f938452604080852082529284528284209052825290205481565b6040519081526020016100bf565b61014f61014a366004610f8a565b61033f565b6040516001600160a01b0390911681526020016100bf565b61017a610175366004610fb2565b610373565b005b5f5461014f906001600160a01b031681565b61017a61019c366004610f4a565b610436565b6100ee6101af366004610f4a565b610a84565b61017a6101c2366004610fb2565b610b25565b6001600160a01b038083165f90815260036020908152604080832093851683529281529082902080548351818402810184019094528084526060939283018282801561023a57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161021c575b505050505090505b92915050565b6001600160a01b0381165f908152600260209081526040918290208054835181840281018401909452808452606093928301828280156102af57602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610291575b50505050509050919050565b5f805b6001600160a01b0384165f90815260026020526040902054811015610336576001600160a01b038481165f9081526002602052604090208054918516918390811061030b5761030b610feb565b5f918252602090912001546001600160a01b03160361032e576001915050610242565b6001016102be565b505f9392505050565b6004602052815f5260405f208181548110610358575f80fd5b5f918252602090912001546001600160a01b03169150829050565b805f0361038a57610385338484610436565b505050565b335f8181526001602090815260408083206001600160a01b038881168552908352818420908716845290915290208290556103c59084610d2d565b6103d0338484610d7d565b6103da3383610dd8565b816001600160a01b0316836001600160a01b0316336001600160a01b03167f7ae337d22e62927a7215ad9c9a3a275863a9d305944d515360e7a2449dd85cce8460405161042991815260200190565b60405180910390a4505050565b610441838383610a84565b61045e576040516366a21ffb60e01b815260040160405180910390fd5b5f5b6001600160a01b038085165f908152600360209081526040808320938716835292905220548110156104e8576001600160a01b038481165f90815260036020908152604080832087851684529091529020805491841691839081106104c7576104c7610feb565b5f918252602090912001546001600160a01b0316146104e857600101610460565b805b6001600160a01b038086165f9081526003602090815260408083209388168352929052205461051b90600190611013565b8110156105d8576001600160a01b038086165f908152600360209081526040808320938816835292905220610551826001611026565b8154811061056157610561610feb565b5f9182526020808320909101546001600160a01b0388811684526003835260408085208983168652909352919092208054919092169190839081106105a8576105a8610feb565b5f91825260209091200180546001600160a01b0319166001600160a01b03929092169190911790556001016104ea565b506001600160a01b038085165f90815260036020908152604080832093871683529290522080548061060c5761060c611039565b5f828152602080822083015f1990810180546001600160a01b03191690559092019092556001600160a01b038681168084526001835260408085208884168087529085528186209388168652928452808520859055908452600383528084209184529152812054900361080157505f5b6001600160a01b0384165f90815260026020526040902054811015610801576001600160a01b038481165f908152600260205260409020805491851691839081106106c9576106c9610feb565b5f918252602090912001546001600160a01b0316036107f957805b6001600160a01b0385165f9081526002602052604090205461070890600190611013565b8110156107ad576001600160a01b0385165f908152600260205260409020610731826001611026565b8154811061074157610741610feb565b5f9182526020808320909101546001600160a01b0388811684526002909252604090922080549190921691908390811061077d5761077d610feb565b5f91825260209091200180546001600160a01b0319166001600160a01b03929092169190911790556001016106e4565b506001600160a01b0384165f9081526002602052604090208054806107d4576107d4611039565b5f8281526020902081015f1990810180546001600160a01b0319169055019055610801565b60010161067c565b6001600160a01b0384165f9081526002602090815260408083208054825181850281018501909352808352849383018282801561086557602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610847575b505050505090505f5b8151811015610904576001600160a01b0387165f908152600160205260408120835182908590859081106108a4576108a4610feb565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f876001600160a01b03166001600160a01b031681526020019081526020015f205411156108fc5760019250610904565b60010161086e565b5081610a32576001600160a01b0384165f908152600460205260408120905b8154811015610a2f57876001600160a01b031682828154811061094857610948610feb565b5f918252602090912001546001600160a01b031603610a2757805b825461097190600190611013565b8110156109f15782610984826001611026565b8154811061099457610994610feb565b905f5260205f20015f9054906101000a90046001600160a01b03168382815481106109c1576109c1610feb565b5f91825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055600101610963565b5081805480610a0257610a02611039565b5f8281526020902081015f1990810180546001600160a01b0319169055019055610a2f565b600101610923565b50505b836001600160a01b0316856001600160a01b0316876001600160a01b03167f8feee98c784e5546d0536039c928d5196ff80e1e67ab22fce85625ab401ce37e60405160405180910390a4505050505050565b5f805b6001600160a01b038086165f90815260036020908152604080832093881683529290522054811015610b19576001600160a01b038581165f9081526003602090815260408083208885168452909152902080549185169183908110610aee57610aee610feb565b5f918252602090912001546001600160a01b031603610b11576001915050610b1e565b600101610a87565b505f90505b9392505050565b610b30838333610a84565b610b4d576040516366a21ffb60e01b815260040160405180910390fd5b6001600160a01b038084165f908152600160209081526040808320938616835292815282822033835290529081205490819003610b9d5760405163dc49aee160e01b815260040160405180910390fd5b5f818311610bab5782610bad565b815b6001600160a01b038087165f9081526001602090815260408083209389168352928152828220338352905290812080549293508392909190610bf0908490611013565b90915550506040516323b872dd60e01b81526001600160a01b038681166004830152336024830152604482018390525f91908616906323b872dd906064016020604051808303815f875af1158015610c4a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c6e919061104d565b905080610c8e576040516312171d8360e31b815260040160405180910390fd5b336001600160a01b0316856001600160a01b0316876001600160a01b03167f342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e85604051610cdd91815260200190565b60405180910390a46001600160a01b038087165f90815260016020908152604080832093891683529281528282203383529052908120549003610d2557610d25868633610436565b505050505050565b610d3782826102bb565b610d79576001600160a01b038281165f9081526002602090815260408220805460018101825590835291200180546001600160a01b0319169183169190911790555b5050565b610d88838383610a84565b610385576001600160a01b039283165f9081526003602090815260408083209486168352938152928120805460018101825590825292902090910180546001600160a01b03191691909216179055565b5f805b6001600160a01b0383165f90815260046020526040902054811015610e52576001600160a01b038381165f90815260046020526040902080549186169183908110610e2857610e28610feb565b5f918252602090912001546001600160a01b031603610e4a5760019150610e52565b600101610ddb565b508061038557506001600160a01b039081165f9081526004602090815260408220805460018101825590835291200180546001600160a01b03191692909116919091179055565b80356001600160a01b0381168114610eaf575f80fd5b919050565b5f8060408385031215610ec5575f80fd5b610ece83610e99565b9150610edc60208401610e99565b90509250929050565b602080825282518282018190525f9190848201906040850190845b81811015610f255783516001600160a01b031683529284019291840191600101610f00565b50909695505050505050565b5f60208284031215610f41575f80fd5b610b1e82610e99565b5f805f60608486031215610f5c575f80fd5b610f6584610e99565b9250610f7360208501610e99565b9150610f8160408501610e99565b90509250925092565b5f8060408385031215610f9b575f80fd5b610fa483610e99565b946020939093013593505050565b5f805f60608486031215610fc4575f80fd5b610fcd84610e99565b9250610fdb60208501610e99565b9150604084013590509250925092565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b8181038181111561024257610242610fff565b8082018082111561024257610242610fff565b634e487b7160e01b5f52603160045260245ffd5b5f6020828403121561105d575f80fd5b81518015158114610b1e575f80fdfea26469706673582212201a6547892384278ca6abe4e2360ebcae7106757f94d2bb0b2c5975217b16b70f64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F15B1D9 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x5F15B1D9 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA2BDD08C EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xBD042D2E EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xC3698DA4 EQ PUSH2 0x1B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAC0BE3F EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xDB36379 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xE6CC31F EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x17A436ED EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x3112FCC6 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0xF31 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH2 0xEE PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x12E PUSH2 0x10C CALLDATASIZE PUSH1 0x4 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x14F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH2 0xEE PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21C JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x291 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x336 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x30B JUMPI PUSH2 0x30B PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x32E JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x242 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2BE JUMP JUMPDEST POP PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x358 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x38A JUMPI PUSH2 0x385 CALLER DUP5 DUP5 PUSH2 0x436 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x3C5 SWAP1 DUP5 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x3D0 CALLER DUP5 DUP5 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x3DA CALLER DUP4 PUSH2 0xDD8 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7AE337D22E62927A7215AD9C9A3A275863A9D305944D515360E7A2449DD85CCE DUP5 PUSH1 0x40 MLOAD PUSH2 0x429 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x441 DUP4 DUP4 DUP4 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x45E JUMPI PUSH1 0x40 MLOAD PUSH4 0x66A21FFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP5 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x4C7 JUMPI PUSH2 0x4C7 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4E8 JUMPI PUSH1 0x1 ADD PUSH2 0x460 JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x51B SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 PUSH2 0x551 DUP3 PUSH1 0x1 PUSH2 0x1026 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x561 JUMPI PUSH2 0x561 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP10 DUP4 AND DUP7 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x5A8 JUMPI PUSH2 0x5A8 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x4EA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x60C JUMPI PUSH2 0x60C PUSH2 0x1039 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP9 DUP5 AND DUP1 DUP8 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP7 KECCAK256 SWAP4 DUP9 AND DUP7 MSTORE SWAP3 DUP5 MSTORE DUP1 DUP6 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 DUP5 MSTORE PUSH1 0x3 DUP4 MSTORE DUP1 DUP5 KECCAK256 SWAP2 DUP5 MSTORE SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x801 JUMPI POP PUSH0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x801 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x6C9 JUMPI PUSH2 0x6C9 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7F9 JUMPI DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x708 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x731 DUP3 PUSH1 0x1 PUSH2 0x1026 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x741 JUMPI PUSH2 0x741 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x77D JUMPI PUSH2 0x77D PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x6E4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x7D4 JUMPI PUSH2 0x7D4 PUSH2 0x1039 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x801 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x67C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x865 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x847 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x904 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 MLOAD DUP3 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 LT PUSH2 0x8A4 JUMPI PUSH2 0x8A4 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x8FC JUMPI PUSH1 0x1 SWAP3 POP PUSH2 0x904 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x86E JUMP JUMPDEST POP DUP2 PUSH2 0xA32 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xA2F JUMPI DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x948 JUMPI PUSH2 0x948 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA27 JUMPI DUP1 JUMPDEST DUP3 SLOAD PUSH2 0x971 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1013 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x9F1 JUMPI DUP3 PUSH2 0x984 DUP3 PUSH1 0x1 PUSH2 0x1026 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x994 JUMPI PUSH2 0x994 PUSH2 0xFEB JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9C1 JUMPI PUSH2 0x9C1 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x963 JUMP JUMPDEST POP DUP2 DUP1 SLOAD DUP1 PUSH2 0xA02 JUMPI PUSH2 0xA02 PUSH2 0x1039 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x923 JUMP JUMPDEST POP POP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8FEEE98C784E5546D0536039C928D5196FF80E1E67AB22FCE85625AB401CE37E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xB19 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xB11 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA87 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB30 DUP4 DUP4 CALLER PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH4 0x66A21FFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH4 0xDC49AEE1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0xBAB JUMPI DUP3 PUSH2 0xBAD JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xBF0 SWAP1 DUP5 SWAP1 PUSH2 0x1013 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC6E SWAP2 SWAP1 PUSH2 0x104D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E DUP6 PUSH1 0x40 MLOAD PUSH2 0xCDD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP10 AND DUP4 MSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xD25 JUMPI PUSH2 0xD25 DUP7 DUP7 CALLER PUSH2 0x436 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD37 DUP3 DUP3 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0xD79 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD88 DUP4 DUP4 DUP4 PUSH2 0xA84 JUMP JUMPDEST PUSH2 0x385 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 DUP2 MSTORE SWAP3 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP3 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xE52 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP7 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xE28 JUMPI PUSH2 0xE28 PUSH2 0xFEB JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xE4A JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xDDB JUMP JUMPDEST POP DUP1 PUSH2 0x385 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEAF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xECE DUP4 PUSH2 0xE99 JUMP JUMPDEST SWAP2 POP PUSH2 0xEDC PUSH1 0x20 DUP5 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF25 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF00 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF41 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB1E DUP3 PUSH2 0xE99 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF65 DUP5 PUSH2 0xE99 JUMP JUMPDEST SWAP3 POP PUSH2 0xF73 PUSH1 0x20 DUP6 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP2 POP PUSH2 0xF81 PUSH1 0x40 DUP6 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF9B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFA4 DUP4 PUSH2 0xE99 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCD DUP5 PUSH2 0xE99 JUMP JUMPDEST SWAP3 POP PUSH2 0xFDB PUSH1 0x20 DUP6 ADD PUSH2 0xE99 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x242 JUMPI PUSH2 0x242 PUSH2 0xFFF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x242 JUMPI PUSH2 0x242 PUSH2 0xFFF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB1E JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE PUSH6 0x47892384278C 0xA6 0xAB 0xE4 0xE2 CALLDATASIZE 0xE 0xBC 0xAE PUSH18 0x6757F94D2BB0B2C5975217B16B70F64736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "119:9826:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:177;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5196:154;;;;;;:::i;:::-;;:::i;2576:329::-;;;;;;:::i;:::-;;:::i;:::-;;;1476:14:2;;1469:22;1451:41;;1439:2;1424:18;2576:329:1;1311:187:2;1287:100:1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1988:25:2;;;1976:2;1961:18;1287:100:1;1842:177:2;1812:59:1;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2447:32:2;;;2429:51;;2417:2;2402:18;1812:59:1;2283:203:2;4044:1082:1;;;;;;:::i;:::-;;:::i;:::-;;148:20;;;;;-1:-1:-1;;;;;148:20:1;;;5715:2936;;;;;;:::i;:::-;;:::i;2995:363::-;;;;;;:::i;:::-;;:::i;8659:1283::-;;;;;;:::i;:::-;;:::i;5445:177::-;-1:-1:-1;;;;;5586:21:1;;;;;;;:15;:21;;;;;;;;:28;;;;;;;;;;;;5579:35;;;;;;;;;;;;;;;;;5550:16;;5579:35;;;5586:28;5579:35;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5579:35:1;;;;;;;;;;;;;;;;;;;;;;;5445:177;;;;;:::o;5196:154::-;-1:-1:-1;;;;;5317:25:1;;;;;;:19;:25;;;;;;;;;5310:32;;;;;;;;;;;;;;;;;5281:16;;5310:32;;;5317:25;5310:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5310:32:1;;;;;;;;;;;;;;;;;;;;;;;5196:154;;;:::o;2576:329::-;2683:4;;2700:175;-1:-1:-1;;;;;2721:25:1;;;;;;:19;:25;;;;;:32;2717:36;;2700:175;;;-1:-1:-1;;;;;2779:25:1;;;;;;;:19;:25;;;;;:28;;:37;;;;2805:1;;2779:28;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2779:28:1;:37;2775:89;;2844:4;2837:11;;;;;2775:89;2755:3;;2700:175;;;-1:-1:-1;2892:5:1;;2576:329;-1:-1:-1;;;2576:329:1:o;1812:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1812:59:1;;-1:-1:-1;1812:59:1;;-1:-1:-1;1812:59:1:o;4044:1082::-;4173:6;4183:1;4173:11;4169:950;;4394:53;4418:10;4430:5;4437:9;4394:23;:53::i;:::-;4044:1082;;;:::o;4169:950::-;4549:10;4532:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;4532:35:1;;;;;;;;;;;:46;;;;;;;;;;:55;;;4681:35;;4561:5;4681:16;:35::i;:::-;4812:51;4834:10;4846:5;4853:9;4812:21;:51::i;:::-;4951:48;4977:10;4989:9;4951:25;:48::i;:::-;5052:9;-1:-1:-1;;;;;5019:51:1;5045:5;-1:-1:-1;;;;;5019:51:1;5033:10;-1:-1:-1;;;;;5019:51:1;;5063:6;5019:51;;;;1988:25:2;;1976:2;1961:18;;1842:177;5019:51:1;;;;;;;;4044:1082;;;:::o;5715:2936::-;5853:42;5872:4;5878:5;5885:9;5853:18;:42::i;:::-;5848:102;;5919:19;;-1:-1:-1;;;5919:19:1;;;;;;;;;;;5848:102;6029:13;6053:190;-1:-1:-1;;;;;6077:21:1;;;;;;;:15;:21;;;;;;;;:28;;;;;;;;;:35;6069:43;;6053:190;;;-1:-1:-1;;;;;6142:21:1;;;;;;;:15;:21;;;;;;;;:28;;;;;;;;;;:35;;:48;;;;6171:5;;6142:35;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6142:35:1;6138:94;6211:5;6138:94;6114:7;;6053:190;;;6284:5;6253:252;-1:-1:-1;;;;;6308:21:1;;;;;;;:15;:21;;;;;;;;:28;;;;;;;;;:35;:39;;6346:1;;6308:39;:::i;:::-;6304:1;:43;6253:252;;;-1:-1:-1;;;;;6426:21:1;;;;;;;:15;:21;;;;;;;;:28;;;;;;;;;6473:5;:1;6477;6473:5;:::i;:::-;6426:67;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6392:21:1;;;;;:15;:21;;;;;;:28;;;;;;;;;;;;:31;;6426:67;;;;;6392:28;6421:1;;6392:31;;;;;;:::i;:::-;;;;;;;;;;:101;;-1:-1:-1;;;;;;6392:101:1;-1:-1:-1;;;;;6392:101:1;;;;;;;;;;-1:-1:-1;6362:3:1;6253:252;;;-1:-1:-1;;;;;;6515:21:1;;;;;;;:15;:21;;;;;;;;:28;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;6515:34:1;;;;;-1:-1:-1;;;;;;6515:34:1;;;;;;;;;-1:-1:-1;;;;;6627:22:1;;;;;;6515:34;6627:22;;;;;;:29;;;;;;;;;;;;:40;;;;;;;;;;;6620:47;;;6749:21;;;:15;:21;;;;;:28;;;;;;;:35;:40;;6745:776;;-1:-1:-1;6912:1:1;6899:611;-1:-1:-1;;;;;6923:25:1;;;;;;:19;:25;;;;;:32;6915:40;;6899:611;;;-1:-1:-1;;;;;6989:25:1;;;;;;;:19;:25;;;;;:32;;:41;;;;7015:5;;6989:32;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6989:32:1;:41;6985:510;;7098:5;7055:339;-1:-1:-1;;;;;7134:25:1;;;;;;:19;:25;;;;;:32;:36;;7169:1;;7134:36;:::i;:::-;7130:1;:40;7055:339;;;-1:-1:-1;;;;;7282:81:1;;;;;;:19;:81;;;;;7364:5;:1;7368;7364:5;:::i;:::-;7282:88;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;7251:25:1;;;;;:19;:25;;;;;;;:28;;7282:88;;;;;7251:25;7277:1;;7251:28;;;;;;:::i;:::-;;;;;;;;;;:119;;-1:-1:-1;;;;;;7251:119:1;-1:-1:-1;;;;;7251:119:1;;;;;;;;;;-1:-1:-1;7197:3:1;7055:339;;;-1:-1:-1;;;;;;7416:25:1;;;;;;:19;:25;;;;;:31;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;7416:31:1;;;;;-1:-1:-1;;;;;;7416:31:1;;;;;;7470:5;;6985:510;6957:7;;6899:611;;;-1:-1:-1;;;;;7687:25:1;;7609:24;7687:25;;;:19;:25;;;;;;;;7652:60;;;;;;;;;;;;;;;;;7609:24;;7652:60;;7687:25;7652:60;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7652:60:1;;;;;;;;;;;;;;;;;;;;;;;7728:6;7723:224;7744:15;:22;7740:1;:26;7723:224;;;-1:-1:-1;;;;;7792:22:1;;7848:1;7792:22;;;:16;:22;;;;;7815:18;;7848:1;;7815:15;;7831:1;;7815:18;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7792:42:1;-1:-1:-1;;;;;7792:42:1;;;;;;;;;;;;:53;7835:9;-1:-1:-1;;;;;7792:53:1;-1:-1:-1;;;;;7792:53:1;;;;;;;;;;;;;:57;7788:148;;;7892:4;7870:26;;7915:5;;7788:148;7768:3;;7723:224;;;;8058:19;8053:493;;-1:-1:-1;;;;;8127:33:1;;8094:30;8127:33;;;:22;:33;;;;;;8175:360;8196:19;;8192:23;;8175:360;;;8264:4;-1:-1:-1;;;;;8245:23:1;:12;8258:1;8245:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;8245:15:1;:23;8241:279;;8307:1;8293:139;8314:19;;:23;;8336:1;;8314:23;:::i;:::-;8310:1;:27;8293:139;;;8389:12;8402:5;:1;8406;8402:5;:::i;:::-;8389:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8389:19:1;8371:12;8384:1;8371:15;;;;;;;;:::i;:::-;;;;;;;;;;:37;;-1:-1:-1;;;;;;8371:37:1;-1:-1:-1;;;;;8371:37:1;;;;;;;;;;-1:-1:-1;8339:3:1;8293:139;;;;8454:12;:18;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;8454:18:1;;;;;-1:-1:-1;;;;;;8454:18:1;;;;;;8495:5;;8241:279;8217:3;;8175:360;;;;8079:467;8053:493;8591:9;-1:-1:-1;;;;;8561:40:1;8584:5;-1:-1:-1;;;;;8561:40:1;8578:4;-1:-1:-1;;;;;8561:40:1;;;;;;;;;;;5837:2814;;;5715:2936;;;:::o;2995:363::-;3126:4;;3143:185;-1:-1:-1;;;;;3164:21:1;;;;;;;:15;:21;;;;;;;;:28;;;;;;;;;:35;3160:39;;3143:185;;;-1:-1:-1;;;;;3225:21:1;;;;;;;:15;:21;;;;;;;;:28;;;;;;;;;;:31;;:44;;;;3254:1;;3225:31;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3225:31:1;:44;3221:96;;3297:4;3290:11;;;;;3221:96;3201:3;;3143:185;;;;3345:5;3338:12;;2995:363;;;;;;:::o;8659:1283::-;8810:46;8829:7;8838:5;8845:10;8810:18;:46::i;:::-;8805:106;;8880:19;;-1:-1:-1;;;8880:19:1;;;;;;;;;;;8805:106;-1:-1:-1;;;;;8944:25:1;;;8923:18;8944:25;;;:16;:25;;;;;;;;:32;;;;;;;;;;;8977:10;8944:44;;;;;;;;;9003:15;;;8999:78;;9042:23;;-1:-1:-1;;;9042:23:1;;;;;;;;;;;8999:78;9089:24;9135:10;9117:15;:28;9116:87;;9188:15;9116:87;;;9162:10;9116:87;-1:-1:-1;;;;;9303:25:1;;;;;;;:16;:25;;;;;;;;:32;;;;;;;;;;;9336:10;9303:44;;;;;;;:64;;9089:114;;-1:-1:-1;9089:114:1;;9303:44;;:25;:64;;9089:114;;9303:64;:::i;:::-;;;;-1:-1:-1;;9478:115:1;;-1:-1:-1;;;9478:115:1;;-1:-1:-1;;;;;3741:15:2;;;9478:115:1;;;3723:34:2;9541:10:1;3773:18:2;;;3766:43;3825:18;;;3818:34;;;9463:12:1;;9478:26;;;;;;3658:18:2;;9478:115:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9463:130;;9609:7;9604:64;;9640:16;;-1:-1:-1;;;9640:16:1;;;;;;;;;;;9604:64;9712:10;-1:-1:-1;;;;;9685:56:1;9705:5;-1:-1:-1;;;;;9685:56:1;9696:7;-1:-1:-1;;;;;9685:56:1;;9724:16;9685:56;;;;1988:25:2;;1976:2;1961:18;;1842:177;9685:56:1;;;;;;;;-1:-1:-1;;;;;9806:25:1;;;;;;;:16;:25;;;;;;;;:32;;;;;;;;;;;9839:10;9806:44;;;;;;;;:49;;9802:133;;9872:51;9896:7;9905:5;9912:10;9872:23;:51::i;:::-;8794:1148;;;8659:1283;;;:::o;1975:187::-;2054:35;2077:4;2083:5;2054:22;:35::i;:::-;2049:106;;-1:-1:-1;;;;;2106:25:1;;;;;;;:19;:25;;;;;;;:37;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2106:37:1;;;;;;;;;;2049:106;1975:187;;:::o;2252:259::-;2389:42;2408:4;2414:5;2421:9;2389:18;:42::i;:::-;2384:120;;-1:-1:-1;;;;;2448:21:1;;;;;;;:15;:21;;;;;;;;:28;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2448:44:1;;;;;;;;2252:259::o;3446:497::-;3563:18;3605:6;3600:230;-1:-1:-1;;;;;3621:35:1;;;;;;:22;:35;;;;;:42;3617:46;;3600:230;;;-1:-1:-1;;;;;3689:35:1;;;;;;;:22;:35;;;;;:38;;:49;;;;3725:1;;3689:38;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;3689:38:1;:49;3685:134;;3775:4;3759:20;;3798:5;;3685:134;3665:3;;3600:230;;;;3845:13;3840:96;;-1:-1:-1;;;;;;3875:35:1;;;;;;;:22;:35;;;;;;;:49;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3875:49:1;;;;;;;;;;;3446:497::o;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:260::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;;408:38;442:2;431:9;427:18;408:38;:::i;:::-;398:48;;192:260;;;;;:::o;457:658::-;628:2;680:21;;;750:13;;653:18;;;772:22;;;599:4;;628:2;851:15;;;;825:2;810:18;;;599:4;894:195;908:6;905:1;902:13;894:195;;;973:13;;-1:-1:-1;;;;;969:39:2;957:52;;1064:15;;;;1029:12;;;;1005:1;923:9;894:195;;;-1:-1:-1;1106:3:2;;457:658;-1:-1:-1;;;;;;457:658:2:o;1120:186::-;1179:6;1232:2;1220:9;1211:7;1207:23;1203:32;1200:52;;;1248:1;1245;1238:12;1200:52;1271:29;1290:9;1271:29;:::i;1503:334::-;1580:6;1588;1596;1649:2;1637:9;1628:7;1624:23;1620:32;1617:52;;;1665:1;1662;1655:12;1617:52;1688:29;1707:9;1688:29;:::i;:::-;1678:39;;1736:38;1770:2;1759:9;1755:18;1736:38;:::i;:::-;1726:48;;1793:38;1827:2;1816:9;1812:18;1793:38;:::i;:::-;1783:48;;1503:334;;;;;:::o;2024:254::-;2092:6;2100;2153:2;2141:9;2132:7;2128:23;2124:32;2121:52;;;2169:1;2166;2159:12;2121:52;2192:29;2211:9;2192:29;:::i;:::-;2182:39;2268:2;2253:18;;;;2240:32;;-1:-1:-1;;;2024:254:2:o;2491:328::-;2568:6;2576;2584;2637:2;2625:9;2616:7;2612:23;2608:32;2605:52;;;2653:1;2650;2643:12;2605:52;2676:29;2695:9;2676:29;:::i;:::-;2666:39;;2724:38;2758:2;2747:9;2743:18;2724:38;:::i;:::-;2714:48;;2809:2;2798:9;2794:18;2781:32;2771:42;;2491:328;;;;;:::o;2824:127::-;2885:10;2880:3;2876:20;2873:1;2866:31;2916:4;2913:1;2906:15;2940:4;2937:1;2930:15;2956:127;3017:10;3012:3;3008:20;3005:1;2998:31;3048:4;3045:1;3038:15;3072:4;3069:1;3062:15;3088:128;3155:9;;;3176:11;;;3173:37;;;3190:18;;:::i;3221:125::-;3286:9;;;3307:10;;;3304:36;;;3320:18;;:::i;3351:127::-;3412:10;3407:3;3403:20;3400:1;3393:31;3443:4;3440:1;3433:15;3467:4;3464:1;3457:15;3863:277;3930:6;3983:2;3971:9;3962:7;3958:23;3954:32;3951:52;;;3999:1;3996;3989:12;3951:52;4031:9;4025:16;4084:5;4077:13;4070:21;4063:5;4060:32;4050:60;;4106:1;4103;4096:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "851600",
								"executionCost": "25122",
								"totalCost": "876722"
							},
							"external": {
								"creatorsForBeneficiary(address,uint256)": "4868",
								"getAllocatedTokensByUser(address)": "infinite",
								"getRecipientsByToken(address,address)": "infinite",
								"isRecipientOfToken(address,address,address)": "infinite",
								"isTokenAllocatedByUser(address,address)": "infinite",
								"owner()": "2357",
								"removeRecipientForToken(address,address,address)": "infinite",
								"setAllocation(address,address,uint256)": "infinite",
								"tokenAllocations(address,address,address)": "infinite",
								"withdrawTokenForBeneficiary(address,address,uint256)": "infinite"
							},
							"internal": {
								"_addCreatorForBeneficiary(address,address)": "infinite",
								"_addRecipientForToken(address,address,address)": "infinite",
								"_addTokenForUser(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 9945,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 9945,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 9945,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 953,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 978,
									"end": 983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 978,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 986,
									"end": 996,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 978,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 119,
									"end": 9945,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 9945,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 119,
									"end": 9945,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 9945,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 9945,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 119,
									"end": 9945,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 9945,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a6547892384278ca6abe4e2360ebcae7106757f94d2bb0b2c5975217b16b70f64736f6c63430008190033",
									".code": [
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "5F15B1D9"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "5F15B1D9"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "A2BDD08C"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "BD042D2E"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "C3698DA4"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "AC0BE3F"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "DB36379"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "E6CC31F"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "17A436ED"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "3112FCC6"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 119,
											"end": 9945,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 5445,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5445,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5445,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5196,
											"end": 5350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5196,
											"end": 5350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2576,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2576,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1490,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1491,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1451,
											"end": 1492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1442,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1311,
											"end": 1498,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1287,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1842,
											"end": 2019,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1812,
											"end": 1871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1812,
											"end": 1871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2480,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2283,
											"end": 2486,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4044,
											"end": 5126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4044,
											"end": 5126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 148,
											"end": 168,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 148,
											"end": 168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 148,
											"end": 168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 148,
											"end": 168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 148,
											"end": 168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 148,
											"end": 168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 148,
											"end": 168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 148,
											"end": 168,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5715,
											"end": 8651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5715,
											"end": 8651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2995,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2995,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8659,
											"end": 9942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 8659,
											"end": 9942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5601,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5550,
											"end": 5566,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5336,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5297,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5281,
											"end": 5297,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2700,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2740,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2746,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2753,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2875,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2700,
											"end": 2875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2804,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2816,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2779,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2816,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2775,
											"end": 2864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2837,
											"end": 2848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2837,
											"end": 2848,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2864,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2775,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2755,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2700,
											"end": 2875,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2700,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2892,
											"end": 2897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2897,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2905,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1812,
											"end": 1871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4169,
											"end": 5119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4418,
											"end": 4428,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4435,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 4446,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4394,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4447,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4394,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4169,
											"end": 5119,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4169,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4548,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4560,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4578,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4587,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4681,
											"end": 4716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4566,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4681,
											"end": 4716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4716,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4681,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4834,
											"end": 4844,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4846,
											"end": 4851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4812,
											"end": 4863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4812,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4977,
											"end": 4987,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 4998,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4951,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4999,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4951,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5033,
											"end": 5043,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "7AE337D22E62927A7215AD9C9A3A275863A9D305944D515360E7A2449DD85CCE"
										},
										{
											"begin": 5063,
											"end": 5069,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 2019,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5070,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4044,
											"end": 5126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5872,
											"end": 5876,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5853,
											"end": 5895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5895,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5853,
											"end": 5895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5848,
											"end": 5950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "66A21FFB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5919,
											"end": 5938,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5950,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5848,
											"end": 5950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6029,
											"end": 6042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6243,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6053,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6092,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6098,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6105,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6105,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6105,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6105,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6112,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6243,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6053,
											"end": 6243,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6157,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6163,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6170,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6190,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6190,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6190,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6171,
											"end": 6176,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6171,
											"end": 6176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6142,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6142,
											"end": 6177,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6138,
											"end": 6232,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6138,
											"end": 6232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6121,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6114,
											"end": 6121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 6053,
											"end": 6243,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6243,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6053,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6284,
											"end": 6289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6505,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6253,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6323,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6329,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6336,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6343,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6308,
											"end": 6347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6308,
											"end": 6347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6347,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6308,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6347,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6253,
											"end": 6505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6441,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6454,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6454,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6454,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6473,
											"end": 6478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6426,
											"end": 6493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6407,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6413,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6392,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6493,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6362,
											"end": 6365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6253,
											"end": 6505,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6505,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6253,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6530,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6543,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6543,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6543,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6543,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6515,
											"end": 6549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6649,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6667,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6764,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6749,
											"end": 6770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6770,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6770,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6777,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6777,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6784,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6745,
											"end": 7521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6899,
											"end": 7510,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6899,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6942,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6948,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6955,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 6955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 6955,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6899,
											"end": 7510,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6899,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6899,
											"end": 7510,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7008,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7030,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6989,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6989,
											"end": 7021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6989,
											"end": 7030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6985,
											"end": 7495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7394,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7055,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7159,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7134,
											"end": 7170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7134,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7134,
											"end": 7170,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7134,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7170,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7055,
											"end": 7394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7301,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7363,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7369,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7364,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7364,
											"end": 7369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7369,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7364,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7282,
											"end": 7370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7270,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7251,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7370,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7055,
											"end": 7394,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7394,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7055,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7435,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7441,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7416,
											"end": 7447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7447,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7470,
											"end": 7475,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6985,
											"end": 7495,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 6985,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6964,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6957,
											"end": 6964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6899,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6899,
											"end": 7510,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6899,
											"end": 7510,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6899,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7706,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7633,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7766,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7808,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7814,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 7849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7832,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7815,
											"end": 7833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7833,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7792,
											"end": 7834,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7844,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7845,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7849,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7788,
											"end": 7936,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7788,
											"end": 7936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7788,
											"end": 7936,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7896,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7870,
											"end": 7896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7915,
											"end": 7920,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7788,
											"end": 7936,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7788,
											"end": 7936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7768,
											"end": 7771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 8053,
											"end": 8546,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8094,
											"end": 8124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8149,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8215,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8192,
											"end": 8215,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8264,
											"end": 8268,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8245,
											"end": 8268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 8245,
											"end": 8260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8245,
											"end": 8260,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8245,
											"end": 8268,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8241,
											"end": 8520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8307,
											"end": 8308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8314,
											"end": 8333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8314,
											"end": 8333,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8314,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 8314,
											"end": 8337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8314,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8314,
											"end": 8337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8314,
											"end": 8337,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 8314,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8337,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 8402,
											"end": 8403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8406,
											"end": 8407,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8402,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 8402,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8407,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 8402,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 8389,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8389,
											"end": 8408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 8371,
											"end": 8386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8408,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8339,
											"end": 8342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 8454,
											"end": 8472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8520,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8241,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8220,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8217,
											"end": 8220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8079,
											"end": 8546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8546,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 8053,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8589,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8582,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "PUSH",
											"source": 1,
											"value": "8FEEE98C784E5546D0536039C928D5196FF80E1E67AB22FCE85625AB401CE37E"
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8601,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 8651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 8651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 8651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 8651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3185,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3199,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3199,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3240,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3253,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3225,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3256,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3269,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3221,
											"end": 3317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3301,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3290,
											"end": 3301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3290,
											"end": 3301,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3221,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3204,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3201,
											"end": 3204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8829,
											"end": 8836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 8843,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8845,
											"end": 8855,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 8810,
											"end": 8856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8856,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 8810,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8805,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8805,
											"end": 8911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "66A21FFB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8880,
											"end": 8899,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8805,
											"end": 8911,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 8805,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8923,
											"end": 8941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8960,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8969,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8976,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8977,
											"end": 8987,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9003,
											"end": 9018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9003,
											"end": 9018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9003,
											"end": 9018,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8999,
											"end": 9077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC49AEE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9065,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9077,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8999,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9135,
											"end": 9145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9117,
											"end": 9132,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9117,
											"end": 9145,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 9116,
											"end": 9203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 9116,
											"end": 9203,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9203,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 9116,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9162,
											"end": 9172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9203,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 9116,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9319,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9335,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9336,
											"end": 9346,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9347,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9347,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9203,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9203,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9089,
											"end": 9203,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9203,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9203,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 9303,
											"end": 9367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9303,
											"end": 9367,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3741,
											"end": 3756,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3741,
											"end": 3756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3741,
											"end": 3756,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3757,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9541,
											"end": 9551,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3791,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3773,
											"end": 3791,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3773,
											"end": 3791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3766,
											"end": 3809,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3843,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3825,
											"end": 3843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3825,
											"end": 3843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9463,
											"end": 9475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9463,
											"end": 9475,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3658,
											"end": 3676,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 9478,
											"end": 9593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 9478,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9609,
											"end": 9616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9604,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9604,
											"end": 9668,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12171D83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9656,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9604,
											"end": 9668,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9604,
											"end": 9668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9712,
											"end": 9722,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9705,
											"end": 9710,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9703,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "PUSH",
											"source": 1,
											"value": "342E7FF505A8A0364CD0DC2FF195C315E43BCE86B204846ECD36913E117B109E"
										},
										{
											"begin": 9724,
											"end": 9740,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 2019,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9741,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9822,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9831,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9838,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9839,
											"end": 9849,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9850,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9850,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9850,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9806,
											"end": 9855,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9802,
											"end": 9935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9896,
											"end": 9903,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9910,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9912,
											"end": 9922,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 9872,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9872,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8794,
											"end": 9942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8794,
											"end": 9942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8794,
											"end": 9942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 9942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2162,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1975,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2077,
											"end": 2081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2054,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2054,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2049,
											"end": 2155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2125,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2131,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2143,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2155,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2049,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2511,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2252,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2408,
											"end": 2412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2430,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2389,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2389,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2384,
											"end": 2504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2463,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2469,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2476,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2492,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3943,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3446,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3611,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3643,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3621,
											"end": 3663,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3663,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3738,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3689,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3689,
											"end": 3727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3738,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3685,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3779,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3759,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3819,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3685,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3840,
											"end": 3936,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3910,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3924,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 452,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 192,
											"end": 452,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 350,
											"end": 389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 440,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 427,
											"end": 445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 408,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 408,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 408,
											"end": 446,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 408,
											"end": 446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 398,
											"end": 446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 398,
											"end": 446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 192,
											"end": 452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 192,
											"end": 452,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 192,
											"end": 452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 457,
											"end": 1115,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 457,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 630,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 680,
											"end": 701,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 750,
											"end": 763,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 750,
											"end": 763,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 653,
											"end": 671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 653,
											"end": 671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 653,
											"end": 671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 772,
											"end": 794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 772,
											"end": 794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 772,
											"end": 794,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 599,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 628,
											"end": 630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 851,
											"end": 866,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 851,
											"end": 866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 851,
											"end": 866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 851,
											"end": 866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 825,
											"end": 827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 810,
											"end": 828,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 810,
											"end": 828,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 810,
											"end": 828,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 599,
											"end": 603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1089,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 894,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 905,
											"end": 906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 915,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1089,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 894,
											"end": 1089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 973,
											"end": 986,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 973,
											"end": 986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 969,
											"end": 1008,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1009,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1079,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1079,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1079,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1041,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1041,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1041,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1005,
											"end": 1006,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 894,
											"end": 1089,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 894,
											"end": 1089,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 894,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1109,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 457,
											"end": 1115,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 457,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1306,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1120,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1203,
											"end": 1235,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1290,
											"end": 1299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1271,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1837,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1503,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1651,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1637,
											"end": 1646,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1635,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1647,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1652,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1655,
											"end": 1667,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1617,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1707,
											"end": 1716,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1688,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1688,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1717,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1770,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1736,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1774,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1736,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1827,
											"end": 1829,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1793,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1831,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1793,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1837,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1837,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1837,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1837,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2278,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2024,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2150,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2139,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2151,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2156,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2159,
											"end": 2171,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2121,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2211,
											"end": 2220,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2192,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2221,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2253,
											"end": 2271,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2271,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2271,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2819,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2491,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2639,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2635,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2608,
											"end": 2640,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2657,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2605,
											"end": 2657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2605,
											"end": 2657,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2605,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2695,
											"end": 2704,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2676,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2705,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2676,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2705,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2758,
											"end": 2760,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2743,
											"end": 2761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2724,
											"end": 2762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2762,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2724,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2811,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2813,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2819,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2819,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2819,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2824,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2885,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2880,
											"end": 2883,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2876,
											"end": 2896,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2906,
											"end": 2921,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2940,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2937,
											"end": 2938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2956,
											"end": 3083,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2956,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3027,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 3012,
											"end": 3015,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3008,
											"end": 3028,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3052,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3038,
											"end": 3053,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3072,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3077,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3216,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3088,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3176,
											"end": 3187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3176,
											"end": 3187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3176,
											"end": 3187,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3173,
											"end": 3210,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3173,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3173,
											"end": 3210,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3190,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3346,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3221,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3307,
											"end": 3317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3307,
											"end": 3317,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3307,
											"end": 3317,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3340,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3304,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3304,
											"end": 3340,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3320,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3320,
											"end": 3338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3478,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3351,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 3407,
											"end": 3410,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3403,
											"end": 3423,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3424,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3440,
											"end": 3441,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3433,
											"end": 3448,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3467,
											"end": 3471,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3464,
											"end": 3465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3472,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3863,
											"end": 4140,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3863,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 3980,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3958,
											"end": 3981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3954,
											"end": 3986,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4003,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3951,
											"end": 4003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 3997,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4003,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3951,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4031,
											"end": 4040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4041,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4090,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4091,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4063,
											"end": 4068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4060,
											"end": 4092,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4050,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4050,
											"end": 4110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4108,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/DecentraWill.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"creatorsForBeneficiary(address,uint256)": "3112fcc6",
							"getAllocatedTokensByUser(address)": "0db36379",
							"getRecipientsByToken(address,address)": "0ac0be3f",
							"isRecipientOfToken(address,address,address)": "bd042d2e",
							"isTokenAllocatedByUser(address,address)": "0e6cc31f",
							"owner()": "8da5cb5b",
							"removeRecipientForToken(address,address,address)": "a2bdd08c",
							"setAllocation(address,address,uint256)": "5f15b1d9",
							"tokenAllocations(address,address,address)": "17a436ed",
							"withdrawTokenForBeneficiary(address,address,uint256)": "c3698da4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoAllocationAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RecipientNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AllocationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"RecipientRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creatorsForBeneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAllocatedTokensByUser\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getRecipientsByToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"isRecipientOfToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenAllocatedByUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"removeRecipientForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenForBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DecentraWill.sol\":\"DecentraWill\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/DecentraWill.sol\":{\"keccak256\":\"0x1086834dc87e546721e113e399ec23a0e2a8082cff28c8c98a21d7d751aa82cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca539a6d0a490aa0438ed69cf2ae48c7df64fca6fa16acfc0f4c96fc2fd8740c\",\"dweb:/ipfs/QmNqCQxDyuugydQRqKzi6eFzyHW9UXRxWKsiGGy9mE2zvf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/DecentraWill.sol:DecentraWill",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 148,
								"contract": "contracts/DecentraWill.sol:DecentraWill",
								"label": "tokenAllocations",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))"
							},
							{
								"astId": 153,
								"contract": "contracts/DecentraWill.sol:DecentraWill",
								"label": "userAllocatedTokens",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 160,
								"contract": "contracts/DecentraWill.sol:DecentraWill",
								"label": "tokenRecipients",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))"
							},
							{
								"astId": 165,
								"contract": "contracts/DecentraWill.sol:DecentraWill",
								"label": "creatorsForBeneficiary",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => address[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_address)dyn_storage)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => mapping(address => uint256)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"contracts/DecentraWill.sol": {
				"ast": {
					"absolutePath": "contracts/DecentraWill.sol",
					"exportedSymbols": {
						"DecentraWill": [
							841
						],
						"IERC20": [
							77
						]
					},
					"id": 842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 842,
							"sourceUnit": 78,
							"src": "59:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DecentraWill",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 841,
							"linearizedBaseContracts": [
								841
							],
							"name": "DecentraWill",
							"nameLocation": "128:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 82,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "163:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "148:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "148:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "7ae337d22e62927a7215ad9c9a3a275863a9d305944d515360e7a2449dd85cce",
									"id": 92,
									"name": "AllocationSet",
									"nameLocation": "196:13:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "236:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "220:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "267:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "251:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "299:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "283:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "327:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "319:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "209:131:1"
									},
									"src": "190:151:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8feee98c784e5546d0536039c928d5196ff80e1e67ab22fce85625ab401ce37e",
									"id": 100,
									"name": "RecipientRemoved",
									"nameLocation": "353:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "396:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "380:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "411:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "459:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "443:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:106:1"
									},
									"src": "347:129:1"
								},
								{
									"anonymous": false,
									"eventSelector": "342e7ff505a8a0364cd0dc2ff195c315e43bce86b204846ecd36913e117b109e",
									"id": 110,
									"name": "Withdrawal",
									"nameLocation": "488:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "525:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "509:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "543:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "591:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "575:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "621:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "613:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:136:1"
									},
									"src": "482:153:1"
								},
								{
									"errorSelector": "82b42900",
									"id": 112,
									"name": "Unauthorized",
									"nameLocation": "664:12:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "676:2:1"
									},
									"src": "658:21:1"
								},
								{
									"errorSelector": "66a21ffb",
									"id": 114,
									"name": "RecipientNotFound",
									"nameLocation": "720:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:2:1"
									},
									"src": "714:26:1"
								},
								{
									"errorSelector": "dc49aee1",
									"id": 116,
									"name": "NoAllocationAvailable",
									"nameLocation": "797:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:2:1"
									},
									"src": "791:30:1"
								},
								{
									"errorSelector": "90b8ec18",
									"id": 118,
									"name": "TransferFailed",
									"nameLocation": "891:14:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:1"
									},
									"src": "885:23:1"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "967:37:1",
										"statements": [
											{
												"expression": {
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "978:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 122,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "986:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "990:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "986:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "978:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "978:18:1"
											}
										]
									},
									"id": 127,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "964:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "967:0:1"
									},
									"scope": 841,
									"src": "953:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1033:103:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 129,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1048:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1052:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1048:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 131,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1062:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1048:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "IfStatement",
												"src": "1044:73:1",
												"trueBody": {
													"id": 136,
													"nodeType": "Block",
													"src": "1069:48:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 133,
																	"name": "Unauthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "1091:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1091:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 135,
															"nodeType": "RevertStatement",
															"src": "1084:21:1"
														}
													]
												}
											},
											{
												"id": 138,
												"nodeType": "PlaceholderStatement",
												"src": "1127:1:1"
											}
										]
									},
									"id": 140,
									"name": "onlyOwner",
									"nameLocation": "1021:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1030:2:1"
									},
									"src": "1012:124:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "17a436ed",
									"id": 148,
									"mutability": "mutable",
									"name": "tokenAllocations",
									"nameLocation": "1371:16:1",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "1287:100:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
										"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
									},
									"typeName": {
										"id": 147,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 141,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1295:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1287:67:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
											"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 146,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 142,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1314:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1306:47:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 145,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1325:27:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 153,
									"mutability": "mutable",
									"name": "userAllocatedTokens",
									"nameLocation": "1542:19:1",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "1504:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 152,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 149,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1512:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1504:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 150,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1523:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 151,
											"nodeType": "ArrayTypeName",
											"src": "1523:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 160,
									"mutability": "mutable",
									"name": "tokenRecipients",
									"nameLocation": "1665:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "1607:73:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
										"typeString": "mapping(address => mapping(address => address[]))"
									},
									"typeName": {
										"id": 159,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 154,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1615:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1607:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
											"typeString": "mapping(address => mapping(address => address[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 158,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 155,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1634:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1626:29:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
												"typeString": "mapping(address => address[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 157,
												"nodeType": "ArrayTypeName",
												"src": "1645:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3112fcc6",
									"id": 165,
									"mutability": "mutable",
									"name": "creatorsForBeneficiary",
									"nameLocation": "1849:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "1812:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 164,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 161,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1820:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1812:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 162,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1831:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 163,
											"nodeType": "ArrayTypeName",
											"src": "1831:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "2038:124:1",
										"statements": [
											{
												"condition": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2053:36:1",
													"subExpression": {
														"arguments": [
															{
																"id": 173,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "2077:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 174,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "2083:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 172,
															"name": "isTokenAllocatedByUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "2054:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address) view returns (bool)"
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2054:35:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 185,
												"nodeType": "IfStatement",
												"src": "2049:106:1",
												"trueBody": {
													"id": 184,
													"nodeType": "Block",
													"src": "2091:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 181,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "2137:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 177,
																			"name": "userAllocatedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "2106:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 179,
																		"indexExpression": {
																			"id": 178,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "2126:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2106:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2132:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2106:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2106:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 183,
															"nodeType": "ExpressionStatement",
															"src": "2106:37:1"
														}
													]
												}
											}
										]
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenForUser",
									"nameLocation": "1984:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2009:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2001:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2023:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2015:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:29:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2038:0:1"
									},
									"scope": 841,
									"src": "1975:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "2373:138:1",
										"statements": [
											{
												"condition": {
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2388:43:1",
													"subExpression": {
														"arguments": [
															{
																"id": 197,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "2408:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 198,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "2414:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 199,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "2421:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 196,
															"name": "isRecipientOfToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2389:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) view returns (bool)"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2389:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "IfStatement",
												"src": "2384:120:1",
												"trueBody": {
													"id": 211,
													"nodeType": "Block",
													"src": "2433:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 208,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "2482:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 202,
																				"name": "tokenRecipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "2448:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																					"typeString": "mapping(address => mapping(address => address[] storage ref))"
																				}
																			},
																			"id": 205,
																			"indexExpression": {
																				"id": 203,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 189,
																				"src": "2464:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2448:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 206,
																		"indexExpression": {
																			"id": 204,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 191,
																			"src": "2470:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2448:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2477:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2448:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2448:44:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 210,
															"nodeType": "ExpressionStatement",
															"src": "2448:44:1"
														}
													]
												}
											}
										]
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addRecipientForToken",
									"nameLocation": "2261:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2301:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2293:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2324:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2316:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2348:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "2340:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:82:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2373:0:1"
									},
									"scope": 841,
									"src": "2252:259:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2689:216:1",
										"statements": [
											{
												"body": {
													"id": 247,
													"nodeType": "Block",
													"src": "2760:115:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 236,
																			"name": "userAllocatedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "2779:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 238,
																		"indexExpression": {
																			"id": 237,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "2799:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2779:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 240,
																	"indexExpression": {
																		"id": 239,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "2805:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2779:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 241,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "2811:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2779:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 246,
															"nodeType": "IfStatement",
															"src": "2775:89:1",
															"trueBody": {
																"id": 245,
																"nodeType": "Block",
																"src": "2818:46:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2844:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 222,
																		"id": 244,
																		"nodeType": "Return",
																		"src": "2837:11:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 227,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2717:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 228,
																"name": "userAllocatedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "2721:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 230,
															"indexExpression": {
																"id": 229,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2741:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2721:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2747:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2721:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2717:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 248,
												"initializationExpression": {
													"assignments": [
														224
													],
													"declarations": [
														{
															"constant": false,
															"id": 224,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2710:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 248,
															"src": "2705:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 223,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2705:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 226,
													"initialValue": {
														"hexValue": "30",
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2714:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2705:10:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2755:3:1",
														"subExpression": {
															"id": 233,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "2755:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 235,
													"nodeType": "ExpressionStatement",
													"src": "2755:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2700:175:1"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2892:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 222,
												"id": 250,
												"nodeType": "Return",
												"src": "2885:12:1"
											}
										]
									},
									"functionSelector": "0e6cc31f",
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenAllocatedByUser",
									"nameLocation": "2585:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2626:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2618:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2618:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2649:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2641:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2607:54:1"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2683:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:6:1"
									},
									"scope": 841,
									"src": "2576:329:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "3132:226:1",
										"statements": [
											{
												"body": {
													"id": 291,
													"nodeType": "Block",
													"src": "3206:122:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 278,
																				"name": "tokenRecipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "3225:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																					"typeString": "mapping(address => mapping(address => address[] storage ref))"
																				}
																			},
																			"id": 280,
																			"indexExpression": {
																				"id": 279,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "3241:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3225:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 282,
																		"indexExpression": {
																			"id": 281,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "3247:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3225:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 284,
																	"indexExpression": {
																		"id": 283,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "3254:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3225:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 285,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "3260:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3225:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 290,
															"nodeType": "IfStatement",
															"src": "3221:96:1",
															"trueBody": {
																"id": 289,
																"nodeType": "Block",
																"src": "3271:46:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3297:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 262,
																		"id": 288,
																		"nodeType": "Return",
																		"src": "3290:11:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 267,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3160:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 268,
																	"name": "tokenRecipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "3164:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																		"typeString": "mapping(address => mapping(address => address[] storage ref))"
																	}
																},
																"id": 270,
																"indexExpression": {
																	"id": 269,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "3180:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3164:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 272,
															"indexExpression": {
																"id": 271,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "3186:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3164:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3193:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3164:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3160:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 292,
												"initializationExpression": {
													"assignments": [
														264
													],
													"declarations": [
														{
															"constant": false,
															"id": 264,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3153:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 292,
															"src": "3148:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 263,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3148:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 266,
													"initialValue": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3157:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3148:10:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3201:3:1",
														"subExpression": {
															"id": 275,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3201:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 277,
													"nodeType": "ExpressionStatement",
													"src": "3201:3:1"
												},
												"nodeType": "ForStatement",
												"src": "3143:185:1"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3345:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 262,
												"id": 294,
												"nodeType": "Return",
												"src": "3338:12:1"
											}
										]
									},
									"functionSelector": "bd042d2e",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRecipientOfToken",
									"nameLocation": "3004:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3041:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "3033:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3064:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "3056:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3088:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "3080:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3080:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:82:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "3126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3125:6:1"
									},
									"scope": 841,
									"src": "2995:363:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3552:391:1",
										"statements": [
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "creatorExists",
														"nameLocation": "3568:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "3563:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 303,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3563:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 306,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3584:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3563:26:1"
											},
											{
												"body": {
													"id": 334,
													"nodeType": "Block",
													"src": "3670:160:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 320,
																			"name": "creatorsForBeneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "3689:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 322,
																		"indexExpression": {
																			"id": 321,
																			"name": "beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "3712:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3689:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 324,
																	"indexExpression": {
																		"id": 323,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "3725:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3689:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 325,
																	"name": "creator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "3731:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3689:49:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 333,
															"nodeType": "IfStatement",
															"src": "3685:134:1",
															"trueBody": {
																"id": 332,
																"nodeType": "Block",
																"src": "3740:79:1",
																"statements": [
																	{
																		"expression": {
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 327,
																				"name": "creatorExists",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 304,
																				"src": "3759:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3775:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "3759:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 330,
																		"nodeType": "ExpressionStatement",
																		"src": "3759:20:1"
																	},
																	{
																		"id": 331,
																		"nodeType": "Break",
																		"src": "3798:5:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 311,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "3617:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 312,
																"name": "creatorsForBeneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "3621:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 314,
															"indexExpression": {
																"id": 313,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "3644:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3621:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3657:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3621:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3617:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"initializationExpression": {
													"assignments": [
														308
													],
													"declarations": [
														{
															"constant": false,
															"id": 308,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3610:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 335,
															"src": "3605:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 307,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3605:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 310,
													"initialValue": {
														"hexValue": "30",
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3614:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3605:10:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3665:3:1",
														"subExpression": {
															"id": 317,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3665:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 319,
													"nodeType": "ExpressionStatement",
													"src": "3665:3:1"
												},
												"nodeType": "ForStatement",
												"src": "3600:230:1"
											},
											{
												"condition": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3844:14:1",
													"subExpression": {
														"id": 336,
														"name": "creatorExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "3845:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 346,
												"nodeType": "IfStatement",
												"src": "3840:96:1",
												"trueBody": {
													"id": 345,
													"nodeType": "Block",
													"src": "3860:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 342,
																		"name": "creator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "3916:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 338,
																			"name": "creatorsForBeneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "3875:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 340,
																		"indexExpression": {
																			"id": 339,
																			"name": "beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "3898:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3875:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3911:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3875:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3875:49:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 344,
															"nodeType": "ExpressionStatement",
															"src": "3875:49:1"
														}
													]
												}
											}
										]
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addCreatorForBeneficiary",
									"nameLocation": "3455:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3499:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3491:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "3525:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3517:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3517:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3480:63:1"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3552:0:1"
									},
									"scope": 841,
									"src": "3446:497:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "4158:968:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "4173:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4183:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4173:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "4465:654:1",
													"statements": [
														{
															"expression": {
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 368,
																				"name": "tokenAllocations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 148,
																				"src": "4532:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																					"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																				}
																			},
																			"id": 373,
																			"indexExpression": {
																				"expression": {
																					"id": 369,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4549:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4553:6:1",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4549:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4532:28:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 374,
																		"indexExpression": {
																			"id": 371,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 350,
																			"src": "4561:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4532:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 375,
																	"indexExpression": {
																		"id": 372,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "4568:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4532:46:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 376,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "4581:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4532:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 378,
															"nodeType": "ExpressionStatement",
															"src": "4532:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 380,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4698:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4702:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4698:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 382,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "4710:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 379,
																	"name": "_addTokenForUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "4681:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4681:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "ExpressionStatement",
															"src": "4681:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 386,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4834:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4838:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4834:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 388,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "4846:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 389,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "4853:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 385,
																	"name": "_addRecipientForToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "4812:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address,address)"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4812:51:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 391,
															"nodeType": "ExpressionStatement",
															"src": "4812:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 393,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4977:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4981:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4977:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 395,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "4989:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 392,
																	"name": "_addCreatorForBeneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "4951:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4951:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 397,
															"nodeType": "ExpressionStatement",
															"src": "4951:48:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 399,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5033:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5037:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5033:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 401,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "5045:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 402,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "5052:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 403,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "5063:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 398,
																	"name": "AllocationSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "5019:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5019:51:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "EmitStatement",
															"src": "5014:56:1"
														}
													]
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "4169:950:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "4186:273:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 361,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4418:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4422:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4418:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 363,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 350,
																		"src": "4430:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 364,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "4437:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 360,
																	"name": "removeRecipientForToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "4394:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address,address)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4394:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "4394:53:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5f15b1d9",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAllocation",
									"nameLocation": "4053:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4085:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4077:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4077:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4109:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4101:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4137:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "4129:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:84:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4158:0:1"
									},
									"scope": 841,
									"src": "4044:1082:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "5299:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 417,
														"name": "userAllocatedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "5317:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 419,
													"indexExpression": {
														"id": 418,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "5337:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5317:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 416,
												"id": 420,
												"nodeType": "Return",
												"src": "5310:32:1"
											}
										]
									},
									"functionSelector": "0db36379",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllocatedTokensByUser",
									"nameLocation": "5205:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5248:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "5240:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5240:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5229:30:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "5281:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5281:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "5281:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5280:18:1"
									},
									"scope": 841,
									"src": "5196:154:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "5568:54:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 432,
															"name": "tokenRecipients",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5586:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																"typeString": "mapping(address => mapping(address => address[] storage ref))"
															}
														},
														"id": 434,
														"indexExpression": {
															"id": 433,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "5602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5586:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 436,
													"indexExpression": {
														"id": 435,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "5608:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5586:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 437,
												"nodeType": "Return",
												"src": "5579:35:1"
											}
										]
									},
									"functionSelector": "0ac0be3f",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecipientsByToken",
									"nameLocation": "5454:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5493:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5485:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5485:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5516:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5508:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5508:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5474:54:1"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5550:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 428,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5550:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 429,
													"nodeType": "ArrayTypeName",
													"src": "5550:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5549:18:1"
									},
									"scope": 841,
									"src": "5445:177:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "5837:2814:1",
										"statements": [
											{
												"condition": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5852:43:1",
													"subExpression": {
														"arguments": [
															{
																"id": 449,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "5872:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 450,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "5878:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 451,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5885:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 448,
															"name": "isRecipientOfToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5853:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) view returns (bool)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5853:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "5848:102:1",
												"trueBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "5897:53:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 454,
																	"name": "RecipientNotFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "5919:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5919:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 456,
															"nodeType": "RevertStatement",
															"src": "5912:26:1"
														}
													]
												}
											},
											{
												"assignments": [
													460
												],
												"declarations": [
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "6037:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "6029:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6029:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 461,
												"nodeType": "VariableDeclarationStatement",
												"src": "6029:13:1"
											},
											{
												"body": {
													"id": 489,
													"nodeType": "Block",
													"src": "6123:120:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 477,
																				"name": "tokenRecipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "6142:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																					"typeString": "mapping(address => mapping(address => address[] storage ref))"
																				}
																			},
																			"id": 479,
																			"indexExpression": {
																				"id": 478,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "6158:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6142:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 481,
																		"indexExpression": {
																			"id": 480,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 443,
																			"src": "6164:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6142:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 483,
																	"indexExpression": {
																		"id": 482,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6171:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6142:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 484,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "6181:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6142:48:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 488,
															"nodeType": "IfStatement",
															"src": "6138:94:1",
															"trueBody": {
																"id": 487,
																"nodeType": "Block",
																"src": "6192:40:1",
																"statements": [
																	{
																		"id": 486,
																		"nodeType": "Break",
																		"src": "6211:5:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "6069:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 467,
																	"name": "tokenRecipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "6077:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																		"typeString": "mapping(address => mapping(address => address[] storage ref))"
																	}
																},
																"id": 469,
																"indexExpression": {
																	"id": 468,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "6093:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6077:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 471,
															"indexExpression": {
																"id": 470,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "6099:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6077:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6106:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6077:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6069:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 490,
												"initializationExpression": {
													"expression": {
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 462,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "6058:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6066:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6058:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 465,
													"nodeType": "ExpressionStatement",
													"src": "6058:9:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6114:7:1",
														"subExpression": {
															"id": 474,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "6114:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 476,
													"nodeType": "ExpressionStatement",
													"src": "6114:7:1"
												},
												"nodeType": "ForStatement",
												"src": "6053:190:1"
											},
											{
												"body": {
													"id": 526,
													"nodeType": "Block",
													"src": "6377:128:1",
													"statements": [
														{
															"expression": {
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 508,
																				"name": "tokenRecipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "6392:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																					"typeString": "mapping(address => mapping(address => address[] storage ref))"
																				}
																			},
																			"id": 512,
																			"indexExpression": {
																				"id": 509,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "6408:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6392:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 513,
																		"indexExpression": {
																			"id": 510,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 443,
																			"src": "6414:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6392:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 514,
																	"indexExpression": {
																		"id": 511,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "6421:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6392:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 515,
																				"name": "tokenRecipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "6426:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																					"typeString": "mapping(address => mapping(address => address[] storage ref))"
																				}
																			},
																			"id": 517,
																			"indexExpression": {
																				"id": 516,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "6442:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6426:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 519,
																		"indexExpression": {
																			"id": 518,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 443,
																			"src": "6448:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6426:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 523,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 520,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 492,
																			"src": "6473:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6477:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6473:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6426:67:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6392:101:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 525,
															"nodeType": "ExpressionStatement",
															"src": "6392:101:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 495,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "6304:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 496,
																		"name": "tokenRecipients",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "6308:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																			"typeString": "mapping(address => mapping(address => address[] storage ref))"
																		}
																	},
																	"id": 498,
																	"indexExpression": {
																		"id": 497,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "6324:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6308:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																		"typeString": "mapping(address => address[] storage ref)"
																	}
																},
																"id": 500,
																"indexExpression": {
																	"id": 499,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "6330:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6308:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6337:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6308:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6346:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6308:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6304:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 527,
												"initializationExpression": {
													"assignments": [
														492
													],
													"declarations": [
														{
															"constant": false,
															"id": 492,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6280:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 527,
															"src": "6272:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 491,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6272:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 494,
													"initialValue": {
														"id": 493,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "6284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6272:17:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6362:3:1",
														"subExpression": {
															"id": 505,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "6362:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 507,
													"nodeType": "ExpressionStatement",
													"src": "6362:3:1"
												},
												"nodeType": "ForStatement",
												"src": "6253:252:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 528,
																	"name": "tokenRecipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "6515:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																		"typeString": "mapping(address => mapping(address => address[] storage ref))"
																	}
																},
																"id": 531,
																"indexExpression": {
																	"id": 529,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "6531:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6515:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 532,
															"indexExpression": {
																"id": 530,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "6537:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6515:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6544:3:1",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6515:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6515:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "6515:34:1"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6620:47:1",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 536,
																	"name": "tokenAllocations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "6627:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																	}
																},
																"id": 538,
																"indexExpression": {
																	"id": 537,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "6644:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6627:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 540,
															"indexExpression": {
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "6650:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6627:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 542,
														"indexExpression": {
															"id": 541,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "6657:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6627:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "6620:47:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 545,
																	"name": "tokenRecipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "6749:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$_$",
																		"typeString": "mapping(address => mapping(address => address[] storage ref))"
																	}
																},
																"id": 547,
																"indexExpression": {
																	"id": 546,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "6765:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6749:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 549,
															"indexExpression": {
																"id": 548,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "6771:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6749:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6778:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6749:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6788:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6749:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "6745:776:1",
												"trueBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "6791:730:1",
													"statements": [
														{
															"body": {
																"id": 613,
																"nodeType": "Block",
																"src": "6966:544:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 566,
																						"name": "userAllocatedTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 153,
																						"src": "6989:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																							"typeString": "mapping(address => address[] storage ref)"
																						}
																					},
																					"id": 568,
																					"indexExpression": {
																						"id": 567,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 441,
																						"src": "7009:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6989:25:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 570,
																				"indexExpression": {
																					"id": 569,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 460,
																					"src": "7015:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6989:32:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 571,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 443,
																				"src": "7025:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6989:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 612,
																		"nodeType": "IfStatement",
																		"src": "6985:510:1",
																		"trueBody": {
																			"id": 611,
																			"nodeType": "Block",
																			"src": "7032:463:1",
																			"statements": [
																				{
																					"body": {
																						"id": 602,
																						"nodeType": "Block",
																						"src": "7224:170:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 600,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"baseExpression": {
																												"id": 588,
																												"name": "userAllocatedTokens",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 153,
																												"src": "7251:19:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																													"typeString": "mapping(address => address[] storage ref)"
																												}
																											},
																											"id": 591,
																											"indexExpression": {
																												"id": 589,
																												"name": "user",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 441,
																												"src": "7271:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "7251:25:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_storage",
																												"typeString": "address[] storage ref"
																											}
																										},
																										"id": 592,
																										"indexExpression": {
																											"id": 590,
																											"name": "i",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 574,
																											"src": "7277:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "7251:28:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"baseExpression": {
																												"id": 593,
																												"name": "userAllocatedTokens",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 153,
																												"src": "7282:19:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																													"typeString": "mapping(address => address[] storage ref)"
																												}
																											},
																											"id": 595,
																											"indexExpression": {
																												"id": 594,
																												"name": "user",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 441,
																												"src": "7332:4:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "7282:81:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_storage",
																												"typeString": "address[] storage ref"
																											}
																										},
																										"id": 599,
																										"indexExpression": {
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 598,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 596,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 574,
																												"src": "7364:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "+",
																											"rightExpression": {
																												"hexValue": "31",
																												"id": 597,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "7368:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"src": "7364:5:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "7282:88:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "7251:119:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 601,
																								"nodeType": "ExpressionStatement",
																								"src": "7251:119:1"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 584,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 577,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 574,
																							"src": "7130:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 583,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 578,
																										"name": "userAllocatedTokens",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 153,
																										"src": "7134:19:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																											"typeString": "mapping(address => address[] storage ref)"
																										}
																									},
																									"id": 580,
																									"indexExpression": {
																										"id": 579,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 441,
																										"src": "7154:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7134:25:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_storage",
																										"typeString": "address[] storage ref"
																									}
																								},
																								"id": 581,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7160:6:1",
																								"memberName": "length",
																								"nodeType": "MemberAccess",
																								"src": "7134:32:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 582,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7169:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "7134:36:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "7130:40:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 603,
																					"initializationExpression": {
																						"assignments": [
																							574
																						],
																						"declarations": [
																							{
																								"constant": false,
																								"id": 574,
																								"mutability": "mutable",
																								"name": "i",
																								"nameLocation": "7094:1:1",
																								"nodeType": "VariableDeclaration",
																								"scope": 603,
																								"src": "7086:9:1",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"typeName": {
																									"id": 573,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "7086:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"visibility": "internal"
																							}
																						],
																						"id": 576,
																						"initialValue": {
																							"id": 575,
																							"name": "index",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 460,
																							"src": "7098:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "VariableDeclarationStatement",
																						"src": "7086:17:1"
																					},
																					"isSimpleCounterLoop": true,
																					"loopExpression": {
																						"expression": {
																							"id": 586,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "7197:3:1",
																							"subExpression": {
																								"id": 585,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 574,
																								"src": "7197:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 587,
																						"nodeType": "ExpressionStatement",
																						"src": "7197:3:1"
																					},
																					"nodeType": "ForStatement",
																					"src": "7055:339:1"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"baseExpression": {
																									"id": 604,
																									"name": "userAllocatedTokens",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 153,
																									"src": "7416:19:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																										"typeString": "mapping(address => address[] storage ref)"
																									}
																								},
																								"id": 606,
																								"indexExpression": {
																									"id": 605,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 441,
																									"src": "7436:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7416:25:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage",
																									"typeString": "address[] storage ref"
																								}
																							},
																							"id": 607,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7442:3:1",
																							"memberName": "pop",
																							"nodeType": "MemberAccess",
																							"src": "7416:29:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																								"typeString": "function (address[] storage pointer)"
																							}
																						},
																						"id": 608,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7416:31:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 609,
																					"nodeType": "ExpressionStatement",
																					"src": "7416:31:1"
																				},
																				{
																					"id": 610,
																					"nodeType": "Break",
																					"src": "7470:5:1"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 557,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "6915:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 558,
																			"name": "userAllocatedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "6923:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 560,
																		"indexExpression": {
																			"id": 559,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 441,
																			"src": "6943:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6923:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6949:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6923:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6915:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 614,
															"initializationExpression": {
																"expression": {
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 553,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6904:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "30",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6912:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6904:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 556,
																"nodeType": "ExpressionStatement",
																"src": "6904:9:1"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6957:7:1",
																	"subExpression": {
																		"id": 563,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6957:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 565,
																"nodeType": "ExpressionStatement",
																"src": "6957:7:1"
															},
															"nodeType": "ForStatement",
															"src": "6899:611:1"
														}
													]
												}
											},
											{
												"assignments": [
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "hasOtherAllocations",
														"nameLocation": "7614:19:1",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "7609:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 617,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7609:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7636:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7609:32:1"
											},
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "allocatedTokens",
														"nameLocation": "7669:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "7652:32:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 623,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7652:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 624,
															"nodeType": "ArrayTypeName",
															"src": "7652:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"baseExpression": {
														"id": 626,
														"name": "userAllocatedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "7687:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(address => address[] storage ref)"
														}
													},
													"id": 628,
													"indexExpression": {
														"id": 627,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "7707:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7687:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7652:60:1"
											},
											{
												"body": {
													"id": 659,
													"nodeType": "Block",
													"src": "7773:174:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 641,
																				"name": "tokenAllocations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 148,
																				"src": "7792:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																					"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																				}
																			},
																			"id": 643,
																			"indexExpression": {
																				"id": 642,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "7809:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7792:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 647,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 644,
																				"name": "allocatedTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "7815:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 646,
																			"indexExpression": {
																				"id": 645,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 631,
																				"src": "7831:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7815:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7792:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 649,
																	"indexExpression": {
																		"id": 648,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "7835:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7792:53:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7848:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7792:57:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 658,
															"nodeType": "IfStatement",
															"src": "7788:148:1",
															"trueBody": {
																"id": 657,
																"nodeType": "Block",
																"src": "7851:85:1",
																"statements": [
																	{
																		"expression": {
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 652,
																				"name": "hasOtherAllocations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 618,
																				"src": "7870:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7892:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "7870:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 655,
																		"nodeType": "ExpressionStatement",
																		"src": "7870:26:1"
																	},
																	{
																		"id": 656,
																		"nodeType": "Break",
																		"src": "7915:5:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "7740:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 635,
															"name": "allocatedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7744:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7760:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7744:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7740:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 660,
												"initializationExpression": {
													"assignments": [
														631
													],
													"declarations": [
														{
															"constant": false,
															"id": 631,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7733:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 660,
															"src": "7728:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 630,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7728:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 633,
													"initialValue": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7737:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7728:10:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7768:3:1",
														"subExpression": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "7768:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 640,
													"nodeType": "ExpressionStatement",
													"src": "7768:3:1"
												},
												"nodeType": "ForStatement",
												"src": "7723:224:1"
											},
											{
												"condition": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8057:20:1",
													"subExpression": {
														"id": 661,
														"name": "hasOtherAllocations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "8058:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "8053:493:1",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "8079:467:1",
													"statements": [
														{
															"assignments": [
																667
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 667,
																	"mutability": "mutable",
																	"name": "creatorsList",
																	"nameLocation": "8112:12:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 723,
																	"src": "8094:30:1",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																		"typeString": "address[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 665,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8094:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 666,
																		"nodeType": "ArrayTypeName",
																		"src": "8094:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 671,
															"initialValue": {
																"baseExpression": {
																	"id": 668,
																	"name": "creatorsForBeneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "8127:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																		"typeString": "mapping(address => address[] storage ref)"
																	}
																},
																"id": 670,
																"indexExpression": {
																	"id": 669,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "8150:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8127:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8094:66:1"
														},
														{
															"body": {
																"id": 721,
																"nodeType": "Block",
																"src": "8222:313:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 683,
																					"name": "creatorsList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "8245:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																						"typeString": "address[] storage pointer"
																					}
																				},
																				"id": 685,
																				"indexExpression": {
																					"id": 684,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "8258:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8245:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 686,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 441,
																				"src": "8264:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "8245:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 720,
																		"nodeType": "IfStatement",
																		"src": "8241:279:1",
																		"trueBody": {
																			"id": 719,
																			"nodeType": "Block",
																			"src": "8270:250:1",
																			"statements": [
																				{
																					"body": {
																						"id": 711,
																						"nodeType": "Block",
																						"src": "8344:88:1",
																						"statements": [
																							{
																								"expression": {
																									"id": 709,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"id": 701,
																											"name": "creatorsList",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 667,
																											"src": "8371:12:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																												"typeString": "address[] storage pointer"
																											}
																										},
																										"id": 703,
																										"indexExpression": {
																											"id": 702,
																											"name": "j",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 689,
																											"src": "8384:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "8371:15:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 704,
																											"name": "creatorsList",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 667,
																											"src": "8389:12:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																												"typeString": "address[] storage pointer"
																											}
																										},
																										"id": 708,
																										"indexExpression": {
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 707,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 705,
																												"name": "j",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 689,
																												"src": "8402:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "+",
																											"rightExpression": {
																												"hexValue": "31",
																												"id": 706,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "8406:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"src": "8402:5:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "8389:19:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"src": "8371:37:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"id": 710,
																								"nodeType": "ExpressionStatement",
																								"src": "8371:37:1"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 697,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 692,
																							"name": "j",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 689,
																							"src": "8310:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 696,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 693,
																									"name": "creatorsList",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 667,
																									"src": "8314:12:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																										"typeString": "address[] storage pointer"
																									}
																								},
																								"id": 694,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8327:6:1",
																								"memberName": "length",
																								"nodeType": "MemberAccess",
																								"src": "8314:19:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 695,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8336:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "8314:23:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8310:27:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 712,
																					"initializationExpression": {
																						"assignments": [
																							689
																						],
																						"declarations": [
																							{
																								"constant": false,
																								"id": 689,
																								"mutability": "mutable",
																								"name": "j",
																								"nameLocation": "8303:1:1",
																								"nodeType": "VariableDeclaration",
																								"scope": 712,
																								"src": "8298:6:1",
																								"stateVariable": false,
																								"storageLocation": "default",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"typeName": {
																									"id": 688,
																									"name": "uint",
																									"nodeType": "ElementaryTypeName",
																									"src": "8298:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"visibility": "internal"
																							}
																						],
																						"id": 691,
																						"initialValue": {
																							"id": 690,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 673,
																							"src": "8307:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "VariableDeclarationStatement",
																						"src": "8298:10:1"
																					},
																					"isSimpleCounterLoop": true,
																					"loopExpression": {
																						"expression": {
																							"id": 699,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "++",
																							"prefix": false,
																							"src": "8339:3:1",
																							"subExpression": {
																								"id": 698,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 689,
																								"src": "8339:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 700,
																						"nodeType": "ExpressionStatement",
																						"src": "8339:3:1"
																					},
																					"nodeType": "ForStatement",
																					"src": "8293:139:1"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"id": 713,
																								"name": "creatorsList",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 667,
																								"src": "8454:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																									"typeString": "address[] storage pointer"
																								}
																							},
																							"id": 715,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8467:3:1",
																							"memberName": "pop",
																							"nodeType": "MemberAccess",
																							"src": "8454:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																								"typeString": "function (address[] storage pointer)"
																							}
																						},
																						"id": 716,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8454:18:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 717,
																					"nodeType": "ExpressionStatement",
																					"src": "8454:18:1"
																				},
																				{
																					"id": 718,
																					"nodeType": "Break",
																					"src": "8495:5:1"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 676,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "8192:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 677,
																		"name": "creatorsList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "8196:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8209:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8196:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8192:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 722,
															"initializationExpression": {
																"assignments": [
																	673
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 673,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "8185:1:1",
																		"nodeType": "VariableDeclaration",
																		"scope": 722,
																		"src": "8180:6:1",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 672,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "8180:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 675,
																"initialValue": {
																	"hexValue": "30",
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8189:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "8180:10:1"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "8217:3:1",
																	"subExpression": {
																		"id": 680,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "8217:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 682,
																"nodeType": "ExpressionStatement",
																"src": "8217:3:1"
															},
															"nodeType": "ForStatement",
															"src": "8175:360:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 726,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "8578:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "8584:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "8591:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 725,
														"name": "RecipientRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "8561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8561:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "8556:45:1"
											}
										]
									},
									"functionSelector": "a2bdd08c",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeRecipientForToken",
									"nameLocation": "5724:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5766:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5758:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5789:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5781:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5813:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5805:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5747:82:1"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5837:0:1"
									},
									"scope": 841,
									"src": "5715:2936:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "8794:1148:1",
										"statements": [
											{
												"condition": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8809:47:1",
													"subExpression": {
														"arguments": [
															{
																"id": 742,
																"name": "creator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "8829:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 743,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "8838:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 744,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8845:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8849:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8845:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 741,
															"name": "isRecipientOfToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "8810:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) view returns (bool)"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8810:46:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "8805:106:1",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "8858:53:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 748,
																	"name": "RecipientNotFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "8880:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8880:19:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "8873:26:1"
														}
													]
												}
											},
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "allocation",
														"nameLocation": "8931:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 839,
														"src": "8923:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8923:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 755,
																"name": "tokenAllocations",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "8944:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																	"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																}
															},
															"id": 757,
															"indexExpression": {
																"id": 756,
																"name": "creator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "8961:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8944:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 759,
														"indexExpression": {
															"id": 758,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "8970:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8944:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 762,
													"indexExpression": {
														"expression": {
															"id": 760,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8977:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8981:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8977:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8944:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8923:65:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "allocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "9003:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9017:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9003:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "8999:78:1",
												"trueBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "9020:57:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 767,
																	"name": "NoAllocationAvailable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "9042:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9042:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 769,
															"nodeType": "RevertStatement",
															"src": "9035:30:1"
														}
													]
												}
											},
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "withdrawalAmount",
														"nameLocation": "9097:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 839,
														"src": "9089:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "requestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "9117:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 775,
																	"name": "allocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "9135:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9117:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 777,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9116:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 779,
														"name": "requestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "9188:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9116:87:1",
													"trueExpression": {
														"id": 778,
														"name": "allocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "9162:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9089:114:1"
											},
											{
												"expression": {
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 782,
																	"name": "tokenAllocations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "9303:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																	}
																},
																"id": 787,
																"indexExpression": {
																	"id": 783,
																	"name": "creator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "9320:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9303:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 788,
															"indexExpression": {
																"id": 784,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "9329:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9303:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 789,
														"indexExpression": {
															"expression": {
																"id": 785,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9336:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9340:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9336:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9303:44:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 790,
														"name": "withdrawalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9351:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9303:64:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "9303:64:1"
											},
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9468:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 839,
														"src": "9463:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 793,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9463:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 804,
												"initialValue": {
													"arguments": [
														{
															"id": 799,
															"name": "creator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "9519:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 800,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9541:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9545:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9541:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "withdrawalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9566:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 796,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "9485:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 795,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "9478:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9478:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9492:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "9478:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9478:115:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9463:130:1"
											},
											{
												"condition": {
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9608:8:1",
													"subExpression": {
														"id": 805,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "9609:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 811,
												"nodeType": "IfStatement",
												"src": "9604:64:1",
												"trueBody": {
													"id": 810,
													"nodeType": "Block",
													"src": "9618:50:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 807,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "9640:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9640:16:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 809,
															"nodeType": "RevertStatement",
															"src": "9633:23:1"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 813,
															"name": "creator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "9696:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "9705:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 815,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9712:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9716:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9712:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "withdrawalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9724:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "9685:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9685:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "EmitStatement",
												"src": "9680:61:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 820,
																	"name": "tokenAllocations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "9806:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																	}
																},
																"id": 822,
																"indexExpression": {
																	"id": 821,
																	"name": "creator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "9823:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9806:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 824,
															"indexExpression": {
																"id": 823,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "9832:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9806:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 827,
														"indexExpression": {
															"expression": {
																"id": 825,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9839:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9843:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9839:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9806:44:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9854:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9806:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "IfStatement",
												"src": "9802:133:1",
												"trueBody": {
													"id": 837,
													"nodeType": "Block",
													"src": "9857:78:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 831,
																		"name": "creator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "9896:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 832,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "9905:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 833,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9912:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9916:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9912:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 830,
																	"name": "removeRecipientForToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "9872:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address,address)"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9872:51:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 836,
															"nodeType": "ExpressionStatement",
															"src": "9872:51:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c3698da4",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawTokenForBeneficiary",
									"nameLocation": "8668:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "8714:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "8706:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8706:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "8732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "requestedAmount",
												"nameLocation": "8764:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "8756:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:91:1"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8794:0:1"
									},
									"scope": 841,
									"src": "8659:1283:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 842,
							"src": "119:9826:1",
							"usedErrors": [
								112,
								114,
								116,
								118
							],
							"usedEvents": [
								92,
								100,
								110
							]
						}
					],
					"src": "33:9914:1"
				},
				"id": 1
			}
		}
	}
}